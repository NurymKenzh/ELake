@model ELake.Models.Layer
@using ELake.Controllers
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SharedResources> SharedLocalizer
@{
    ViewData["Title"] = SharedLocalizer["PublishShape"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/jquery-ui/jquery-ui.js"></script>
<script src="~/lib/evol-colorpicker/js/evol-colorpicker.js"></script>
<link href="~/lib/jquery-ui/themes/base/jquery-ui.css" rel="stylesheet" />
<link href="~/lib/evol-colorpicker/css/evol-colorpicker.css" rel="stylesheet" />

<body class="bg-light">
    <div class="container">
        <div class="jumbotron jumbotron-fluid">
            <div class="container">
                <h2 class="pb-3 mb-1 font-italic border-bottom">@SharedLocalizer["PublishShape"]</h2>
                <p class="lead">There should be a description</p>
                @Html.ActionLink(SharedLocalizer["Instruction"], "Instruction", new { Type = "PublishShape" })
                @if (!string.IsNullOrEmpty(ViewBag.Message))
                {
                    <div>
                        @ViewBag.Message
                    </div>
                }
            </div>
        </div>
        <form asp-action="PublishShape">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label class="control-label">@SharedLocalizer["ShapeFile"]</label>
                    <select name="ShapeFile" class="form-control" asp-items="ViewBag.ShapeFiles"><option value="">Choose...</option></select>
                </div>
                <div class="form-group col-md-6">
                    <label for="inputState">@SharedLocalizer["Tags"]</label>
                    <textarea name="Tags" class="form-control" type="text"></textarea>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label class="control-label">@SharedLocalizer["NameKK"]</label>
                    <input name="NameKK" class="form-control" type="text" />
                    <small id="HelpBlock" class="form-text text-muted">
                        There should be a hint or warning!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                    </small>
                </div>
                <div class="form-group col-md-6">
                    <label class="control-label">@SharedLocalizer["DescriptionKK"]</label>
                    <textarea name="DescriptionKK" class="form-control" type="text"></textarea>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label class="control-label">@SharedLocalizer["NameRU"]</label>
                    <input name="NameRU" class="form-control" type="text" />
                    <small id="HelpBlock" class="form-text text-muted">
                        There should be a hint or warning!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                    </small>
                </div>
                <div class="form-group col-md-6">
                    <label class="control-label">@SharedLocalizer["DescriptionRU"]</label>
                    <textarea name="DescriptionRU" class="form-control" type="text"></textarea>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label class="control-label">@SharedLocalizer["NameEN"]</label>
                    <input name="NameEN" class="form-control" type="text" />
                    <small id="HelpBlock" class="form-text text-muted">
                        There should be a hint or warning!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                    </small>
                </div>
                <div class="form-group col-md-6">
                    <label class="control-label">@SharedLocalizer["DescriptionEN"]</label>
                    <textarea name="DescriptionEN" class="form-control" type="text"></textarea>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label class="control-label">@SharedLocalizer["GeoServerStyle"]</label>
                    <select name="Style" class="form-control" asp-items="ViewBag.Styles"></select>
                    <small id="HelpBlock" class="form-text text-muted">
                        There should be a hint or warning!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                    </small>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label class="control-label">@SharedLocalizer["AsLakeLayer"]</label>
                    @Html.CheckBox("AsLakeLayer", null, new { @onclick = "AsLakeLayerF()", @id = "AsLakeLayer" })
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleWaterLevel"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorWaterLevel()" />
                    <table id="ColorsWaterLevel" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsWaterLevel"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesWaterLevel" hidden="hidden"></label>
                                    <label id="MinValuesWaterLevel" asp-for="MinValuesWaterLevel"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsWaterLevel.Count(); i++)
                            {
                                string Color = "ColorWaterLevel" + i.ToString(),
                                    Value = "ValueInputWaterLevel" + i.ToString(),
                                    inputid = "ColorInputWaterLevel" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsWaterLevel[@i].Color" value="@Model.LayerIntervalsWaterLevel[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsWaterLevel[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsWaterLevel[@i].MinValue" value="@Model.LayerIntervalsWaterLevel[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsWaterLevel[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorWaterLevel(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleSurfaceFlow"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorSurfaceFlow()" />
                    <table id="ColorsSurfaceFlow" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsSurfaceFlow"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesSurfaceFlow" hidden="hidden"></label>
                                    <label id="MinValuesSurfaceFlow" asp-for="MinValuesSurfaceFlow"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsSurfaceFlow.Count(); i++)
                            {
                                string Color = "ColorSurfaceFlow" + i.ToString(),
                                    Value = "ValueInputSurfaceFlow" + i.ToString(),
                                    inputid = "ColorInputSurfaceFlow" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsSurfaceFlow[@i].Color" value="@Model.LayerIntervalsSurfaceFlow[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsSurfaceFlow[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsSurfaceFlow[@i].MinValue" value="@Model.LayerIntervalsSurfaceFlow[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsSurfaceFlow[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorSurfaceFlow(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StylePrecipitation"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorPrecipitation()" />
                    <table id="ColorsPrecipitation" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsPrecipitation"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesPrecipitation" hidden="hidden"></label>
                                    <label id="MinValuesPrecipitation" asp-for="MinValuesPrecipitation"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsPrecipitation.Count(); i++)
                            {
                                string Color = "ColorPrecipitation" + i.ToString(),
                                    Value = "ValueInputPrecipitation" + i.ToString(),
                                    inputid = "ColorInputPrecipitation" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsPrecipitation[@i].Color" value="@Model.LayerIntervalsPrecipitation[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsPrecipitation[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsPrecipitation[@i].MinValue" value="@Model.LayerIntervalsPrecipitation[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsPrecipitation[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorPrecipitation(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleUndergroundFlow"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorUndergroundFlow()" />
                    <table id="ColorsUndergroundFlow" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsUndergroundFlow"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesUndergroundFlow" hidden="hidden"></label>
                                    <label id="MinValuesUndergroundFlow" asp-for="MinValuesUndergroundFlow"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsUndergroundFlow.Count(); i++)
                            {
                                string Color = "ColorUndergroundFlow" + i.ToString(),
                                    Value = "ValueInputUndergroundFlow" + i.ToString(),
                                    inputid = "ColorInputUndergroundFlow" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsUndergroundFlow[@i].Color" value="@Model.LayerIntervalsUndergroundFlow[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsUndergroundFlow[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsUndergroundFlow[@i].MinValue" value="@Model.LayerIntervalsUndergroundFlow[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsUndergroundFlow[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorUndergroundFlow(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleSurfaceOutflow"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorSurfaceOutflow()" />
                    <table id="ColorsSurfaceOutflow" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsSurfaceOutflow"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesSurfaceOutflow" hidden="hidden"></label>
                                    <label id="MinValuesSurfaceOutflow" asp-for="MinValuesSurfaceOutflow"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsSurfaceOutflow.Count(); i++)
                            {
                                string Color = "ColorSurfaceOutflow" + i.ToString(),
                                    Value = "ValueInputSurfaceOutflow" + i.ToString(),
                                    inputid = "ColorInputSurfaceOutflow" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsSurfaceOutflow[@i].Color" value="@Model.LayerIntervalsSurfaceOutflow[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsSurfaceOutflow[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsSurfaceOutflow[@i].MinValue" value="@Model.LayerIntervalsSurfaceOutflow[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsSurfaceOutflow[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorSurfaceOutflow(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleEvaporation"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorEvaporation()" />
                    <table id="ColorsEvaporation" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsEvaporation"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesEvaporation" hidden="hidden"></label>
                                    <label id="MinValuesEvaporation" asp-for="MinValuesEvaporation"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsEvaporation.Count(); i++)
                            {
                                string Color = "ColorEvaporation" + i.ToString(),
                                    Value = "ValueInputEvaporation" + i.ToString(),
                                    inputid = "ColorInputEvaporation" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsEvaporation[@i].Color" value="@Model.LayerIntervalsEvaporation[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsEvaporation[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsEvaporation[@i].MinValue" value="@Model.LayerIntervalsEvaporation[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsEvaporation[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorEvaporation(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleUndergroundOutflow"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorUndergroundOutflow()" />
                    <table id="ColorsUndergroundOutflow" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsUndergroundOutflow"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesUndergroundOutflow" hidden="hidden"></label>
                                    <label id="MinValuesUndergroundOutflow" asp-for="MinValuesUndergroundOutflow"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsUndergroundOutflow.Count(); i++)
                            {
                                string Color = "ColorUndergroundOutflow" + i.ToString(),
                                    Value = "ValueInputUndergroundOutflow" + i.ToString(),
                                    inputid = "ColorInputUndergroundOutflow" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsUndergroundOutflow[@i].Color" value="@Model.LayerIntervalsUndergroundOutflow[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsUndergroundOutflow[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsUndergroundOutflow[@i].MinValue" value="@Model.LayerIntervalsUndergroundOutflow[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsUndergroundOutflow[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorUndergroundOutflow(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryMineralization"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryMineralization()" />
                    <table id="ColorsHydrochemistryMineralization" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryMineralization"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryMineralization" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryMineralization" asp-for="MinValuesHydrochemistryMineralization"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryMineralization.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryMineralization" + i.ToString(),
                                    Value = "ValueInputHydrochemistryMineralization" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryMineralization" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryMineralization[@i].Color" value="@Model.LayerIntervalsHydrochemistryMineralization[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryMineralization[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryMineralization[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryMineralization[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryMineralization[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryMineralization(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryTotalHardness"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryTotalHardness()" />
                    <table id="ColorsHydrochemistryTotalHardness" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryTotalHardness"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryTotalHardness" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryTotalHardness" asp-for="MinValuesHydrochemistryTotalHardness"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryTotalHardness.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryTotalHardness" + i.ToString(),
                                    Value = "ValueInputHydrochemistryTotalHardness" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryTotalHardness" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryTotalHardness[@i].Color" value="@Model.LayerIntervalsHydrochemistryTotalHardness[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryTotalHardness[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryTotalHardness[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryTotalHardness[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryTotalHardness[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryTotalHardness(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryDissOxygWater"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryDissOxygWater()" />
                    <table id="ColorsHydrochemistryDissOxygWater" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryDissOxygWater"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryDissOxygWater" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryDissOxygWater" asp-for="MinValuesHydrochemistryDissOxygWater"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryDissOxygWater.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryDissOxygWater" + i.ToString(),
                                    Value = "ValueInputHydrochemistryDissOxygWater" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryDissOxygWater" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryDissOxygWater[@i].Color" value="@Model.LayerIntervalsHydrochemistryDissOxygWater[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryDissOxygWater[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryDissOxygWater[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryDissOxygWater[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryDissOxygWater[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryDissOxygWater(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryPercentOxygWater"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryPercentOxygWater()" />
                    <table id="ColorsHydrochemistryPercentOxygWater" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryPercentOxygWater"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryPercentOxygWater" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryPercentOxygWater" asp-for="MinValuesHydrochemistryPercentOxygWater"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryPercentOxygWater.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryPercentOxygWater" + i.ToString(),
                                    Value = "ValueInputHydrochemistryPercentOxygWater" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryPercentOxygWater" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryPercentOxygWater[@i].Color" value="@Model.LayerIntervalsHydrochemistryPercentOxygWater[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryPercentOxygWater[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryPercentOxygWater[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryPercentOxygWater[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryPercentOxygWater[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryPercentOxygWater(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistrypH"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistrypH()" />
                    <table id="ColorsHydrochemistrypH" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistrypH"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistrypH" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistrypH" asp-for="MinValuesHydrochemistrypH"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistrypH.Count(); i++)
                            {
                                string Color = "ColorHydrochemistrypH" + i.ToString(),
                                    Value = "ValueInputHydrochemistrypH" + i.ToString(),
                                    inputid = "ColorInputHydrochemistrypH" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistrypH[@i].Color" value="@Model.LayerIntervalsHydrochemistrypH[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistrypH[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistrypH[@i].MinValue" value="@Model.LayerIntervalsHydrochemistrypH[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistrypH[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistrypH(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryOrganicSubstances"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryOrganicSubstances()" />
                    <table id="ColorsHydrochemistryOrganicSubstances" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryOrganicSubstances"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryOrganicSubstances" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryOrganicSubstances" asp-for="MinValuesHydrochemistryOrganicSubstances"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryOrganicSubstances.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryOrganicSubstances" + i.ToString(),
                                    Value = "ValueInputHydrochemistryOrganicSubstances" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryOrganicSubstances" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryOrganicSubstances[@i].Color" value="@Model.LayerIntervalsHydrochemistryOrganicSubstances[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryOrganicSubstances[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryOrganicSubstances[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryOrganicSubstances[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryOrganicSubstances[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryOrganicSubstances(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryCa"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryCa()" />
                    <table id="ColorsHydrochemistryCa" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryCa"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryCa" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryCa" asp-for="MinValuesHydrochemistryCa"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryCa.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryCa" + i.ToString(),
                                    Value = "ValueInputHydrochemistryCa" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryCa" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryCa[@i].Color" value="@Model.LayerIntervalsHydrochemistryCa[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCa[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryCa[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryCa[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryCa[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryCa(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryMg"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryMg()" />
                    <table id="ColorsHydrochemistryMg" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryMg"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryMg" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryMg" asp-for="MinValuesHydrochemistryMg"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryMg.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryMg" + i.ToString(),
                                    Value = "ValueInputHydrochemistryMg" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryMg" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryMg[@i].Color" value="@Model.LayerIntervalsHydrochemistryMg[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryMg[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryMg[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryMg[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryMg[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryMg(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryNaK"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryNaK()" />
                    <table id="ColorsHydrochemistryNaK" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryNaK"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryNaK" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryNaK" asp-for="MinValuesHydrochemistryNaK"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryNaK.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryNaK" + i.ToString(),
                                    Value = "ValueInputHydrochemistryNaK" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryNaK" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryNaK[@i].Color" value="@Model.LayerIntervalsHydrochemistryNaK[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNaK[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryNaK[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryNaK[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryNaK[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryNaK(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryCl"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryCl()" />
                    <table id="ColorsHydrochemistryCl" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryCl"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryCl" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryCl" asp-for="MinValuesHydrochemistryCl"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryCl.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryCl" + i.ToString(),
                                    Value = "ValueInputHydrochemistryCl" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryCl" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryCl[@i].Color" value="@Model.LayerIntervalsHydrochemistryCl[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCl[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryCl[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryCl[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryCl[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryCl(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryHCO"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryHCO()" />
                    <table id="ColorsHydrochemistryHCO" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryHCO"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryHCO" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryHCO" asp-for="MinValuesHydrochemistryHCO"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryHCO.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryHCO" + i.ToString(),
                                    Value = "ValueInputHydrochemistryHCO" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryHCO" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryHCO[@i].Color" value="@Model.LayerIntervalsHydrochemistryHCO[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryHCO[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryHCO[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryHCO[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryHCO[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryHCO(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistrySO"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistrySO()" />
                    <table id="ColorsHydrochemistrySO" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistrySO"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistrySO" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistrySO" asp-for="MinValuesHydrochemistrySO"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistrySO.Count(); i++)
                            {
                                string Color = "ColorHydrochemistrySO" + i.ToString(),
                                    Value = "ValueInputHydrochemistrySO" + i.ToString(),
                                    inputid = "ColorInputHydrochemistrySO" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistrySO[@i].Color" value="@Model.LayerIntervalsHydrochemistrySO[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistrySO[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistrySO[@i].MinValue" value="@Model.LayerIntervalsHydrochemistrySO[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistrySO[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistrySO(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryNH"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryNH()" />
                    <table id="ColorsHydrochemistryNH" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryNH"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryNH" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryNH" asp-for="MinValuesHydrochemistryNH"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryNH.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryNH" + i.ToString(),
                                    Value = "ValueInputHydrochemistryNH" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryNH" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryNH[@i].Color" value="@Model.LayerIntervalsHydrochemistryNH[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNH[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryNH[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryNH[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryNH[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryNH(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryNO2"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryNO2()" />
                    <table id="ColorsHydrochemistryNO2" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryNO2"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryNO2" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryNO2" asp-for="MinValuesHydrochemistryNO2"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryNO2.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryNO2" + i.ToString(),
                                    Value = "ValueInputHydrochemistryNO2" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryNO2" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryNO2[@i].Color" value="@Model.LayerIntervalsHydrochemistryNO2[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNO2[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryNO2[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryNO2[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryNO2[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryNO2(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryNO3"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryNO3()" />
                    <table id="ColorsHydrochemistryNO3" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryNO3"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryNO3" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryNO3" asp-for="MinValuesHydrochemistryNO3"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryNO3.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryNO3" + i.ToString(),
                                    Value = "ValueInputHydrochemistryNO3" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryNO3" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryNO3[@i].Color" value="@Model.LayerIntervalsHydrochemistryNO3[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNO3[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryNO3[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryNO3[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryNO3[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryNO3(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryPPO"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryPPO()" />
                    <table id="ColorsHydrochemistryPPO" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryPPO"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryPPO" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryPPO" asp-for="MinValuesHydrochemistryPPO"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryPPO.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryPPO" + i.ToString(),
                                    Value = "ValueInputHydrochemistryPPO" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryPPO" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryPPO[@i].Color" value="@Model.LayerIntervalsHydrochemistryPPO[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryPPO[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryPPO[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryPPO[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryPPO[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryPPO(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryCu"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryCu()" />
                    <table id="ColorsHydrochemistryCu" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryCu"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryCu" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryCu" asp-for="MinValuesHydrochemistryCu"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryCu.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryCu" + i.ToString(),
                                    Value = "ValueInputHydrochemistryCu" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryCu" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryCu[@i].Color" value="@Model.LayerIntervalsHydrochemistryCu[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCu[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryCu[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryCu[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryCu[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryCu(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryZn"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryZn()" />
                    <table id="ColorsHydrochemistryZn" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryZn"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryZn" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryZn" asp-for="MinValuesHydrochemistryZn"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryZn.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryZn" + i.ToString(),
                                    Value = "ValueInputHydrochemistryZn" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryZn" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryZn[@i].Color" value="@Model.LayerIntervalsHydrochemistryZn[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryZn[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryZn[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryZn[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryZn[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryZn(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryMn"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryMn()" />
                    <table id="ColorsHydrochemistryMn" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryMn"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryMn" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryMn" asp-for="MinValuesHydrochemistryMn"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryMn.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryMn" + i.ToString(),
                                    Value = "ValueInputHydrochemistryMn" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryMn" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryMn[@i].Color" value="@Model.LayerIntervalsHydrochemistryMn[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryMn[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryMn[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryMn[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryMn[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryMn(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryPb"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryPb()" />
                    <table id="ColorsHydrochemistryPb" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryPb"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryPb" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryPb" asp-for="MinValuesHydrochemistryPb"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryPb.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryPb" + i.ToString(),
                                    Value = "ValueInputHydrochemistryPb" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryPb" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryPb[@i].Color" value="@Model.LayerIntervalsHydrochemistryPb[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryPb[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryPb[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryPb[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryPb[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryPb(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryNi"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryNi()" />
                    <table id="ColorsHydrochemistryNi" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryNi"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryNi" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryNi" asp-for="MinValuesHydrochemistryNi"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryNi.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryNi" + i.ToString(),
                                    Value = "ValueInputHydrochemistryNi" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryNi" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryNi[@i].Color" value="@Model.LayerIntervalsHydrochemistryNi[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNi[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryNi[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryNi[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryNi[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryNi(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryCd"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryCd()" />
                    <table id="ColorsHydrochemistryCd" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryCd"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryCd" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryCd" asp-for="MinValuesHydrochemistryCd"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryCd.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryCd" + i.ToString(),
                                    Value = "ValueInputHydrochemistryCd" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryCd" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryCd[@i].Color" value="@Model.LayerIntervalsHydrochemistryCd[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCd[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryCd[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryCd[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryCd[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryCd(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryCo"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryCo()" />
                    <table id="ColorsHydrochemistryCo" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryCo"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryCo" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryCo" asp-for="MinValuesHydrochemistryCo"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryCo.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryCo" + i.ToString(),
                                    Value = "ValueInputHydrochemistryCo" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryCo" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryCo[@i].Color" value="@Model.LayerIntervalsHydrochemistryCo[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCo[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryCo[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryCo[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryCo[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryCo(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryCIWP"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryCIWP()" />
                    <table id="ColorsHydrochemistryCIWP" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryCIWP"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryCIWP" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryCIWP" asp-for="MinValuesHydrochemistryCIWP"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryCIWP.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryCIWP" + i.ToString(),
                                    Value = "ValueInputHydrochemistryCIWP" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryCIWP" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryCIWP[@i].Color" value="@Model.LayerIntervalsHydrochemistryCIWP[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCIWP[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryCIWP[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryCIWP[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryCIWP[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryCIWP(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="@SharedLocalizer["Publish"]" class="btn btn-outline-primary my-2 my-sm-0" />
            </div>
        </form>
    </div>
</body>
<div hidden="hidden">
    <div id="ColorPickerString">@SharedLocalizer["ColorPicker"]</div>
    <div id="ColorsWaterLevelCount">@Model.LayerIntervalsWaterLevel.Count()</div>
    <div id="ColorsSurfaceFlowCount">@Model.LayerIntervalsSurfaceFlow.Count()</div>
    <div id="ColorsPrecipitationCount">@Model.LayerIntervalsPrecipitation.Count()</div>
    <div id="ColorsUndergroundFlowCount">@Model.LayerIntervalsUndergroundFlow.Count()</div>
    <div id="ColorsSurfaceOutflowCount">@Model.LayerIntervalsSurfaceOutflow.Count()</div>
    <div id="ColorsEvaporationCount">@Model.LayerIntervalsEvaporation.Count()</div>
    <div id="ColorsUndergroundOutflowCount">@Model.LayerIntervalsUndergroundOutflow.Count()</div>
    <div id="ColorsHydrochemistryMineralizationCount">@Model.LayerIntervalsHydrochemistryMineralization.Count()</div>
    <div id="ColorsHydrochemistryTotalHardnessCount">@Model.LayerIntervalsHydrochemistryTotalHardness.Count()</div>
    <div id="ColorsHydrochemistryDissOxygWaterCount">@Model.LayerIntervalsHydrochemistryDissOxygWater.Count()</div>
    <div id="ColorsHydrochemistryPercentOxygWaterCount">@Model.LayerIntervalsHydrochemistryPercentOxygWater.Count()</div>
    <div id="ColorsHydrochemistrypHCount">@Model.LayerIntervalsHydrochemistrypH.Count()</div>
    <div id="ColorsHydrochemistryOrganicSubstancesCount">@Model.LayerIntervalsHydrochemistryOrganicSubstances.Count()</div>
    <div id="ColorsHydrochemistryCaCount">@Model.LayerIntervalsHydrochemistryCa.Count()</div>
    <div id="ColorsHydrochemistryMgCount">@Model.LayerIntervalsHydrochemistryMg.Count()</div>
    <div id="ColorsHydrochemistryNaKCount">@Model.LayerIntervalsHydrochemistryNaK.Count()</div>
    <div id="ColorsHydrochemistryClCount">@Model.LayerIntervalsHydrochemistryCl.Count()</div>
    <div id="ColorsHydrochemistryHCOCount">@Model.LayerIntervalsHydrochemistryHCO.Count()</div>
    <div id="ColorsHydrochemistrySOCount">@Model.LayerIntervalsHydrochemistrySO.Count()</div>
    <div id="ColorsHydrochemistryNHCount">@Model.LayerIntervalsHydrochemistryNH.Count()</div>
    <div id="ColorsHydrochemistryNO2Count">@Model.LayerIntervalsHydrochemistryNO2.Count()</div>
    <div id="ColorsHydrochemistryNO3Count">@Model.LayerIntervalsHydrochemistryNO3.Count()</div>
    <div id="ColorsHydrochemistryPPOCount">@Model.LayerIntervalsHydrochemistryPPO.Count()</div>
    <div id="ColorsHydrochemistryCuCount">@Model.LayerIntervalsHydrochemistryCu.Count()</div>
    <div id="ColorsHydrochemistryZnCount">@Model.LayerIntervalsHydrochemistryZn.Count()</div>
    <div id="ColorsHydrochemistryMnCount">@Model.LayerIntervalsHydrochemistryMn.Count()</div>
    <div id="ColorsHydrochemistryPbCount">@Model.LayerIntervalsHydrochemistryPb.Count()</div>
    <div id="ColorsHydrochemistryNiCount">@Model.LayerIntervalsHydrochemistryNi.Count()</div>
    <div id="ColorsHydrochemistryCdCount">@Model.LayerIntervalsHydrochemistryCd.Count()</div>
    <div id="ColorsHydrochemistryCoCount">@Model.LayerIntervalsHydrochemistryCo.Count()</div>
    <div id="ColorsHydrochemistryCIWPCount">@Model.LayerIntervalsHydrochemistryCIWP.Count()</div>
</div>

@*<div class="row">
    <div class="col-md-4">
        <form asp-action="PublishShape">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label">@SharedLocalizer["ShapeFile"]</label>
                <select name="ShapeFile" class="form-control" asp-items="ViewBag.ShapeFiles"></select>
            </div>
            <div class="form-group">
                <label class="control-label">@SharedLocalizer["NameKK"]</label>
                <input name="NameKK" class="form-control" type="text" />
            </div>
            <div class="form-group">
                <label class="control-label">@SharedLocalizer["NameRU"]</label>
                <input name="NameRU" class="form-control" type="text" />
            </div>
            <div class="form-group">
                <label class="control-label">@SharedLocalizer["NameEN"]</label>
                <input name="NameEN" class="form-control" type="text" />
            </div>
            <div class="form-group">
                <label class="control-label">@SharedLocalizer["DescriptionKK"]</label>
                <textarea name="DescriptionKK" class="form-control" type="text"></textarea>
            </div>
            <div class="form-group">
                <label class="control-label">@SharedLocalizer["DescriptionRU"]</label>
                <textarea name="DescriptionRU" class="form-control" type="text"></textarea>
            </div>
            <div class="form-group">
                <label class="control-label">@SharedLocalizer["DescriptionEN"]</label>
                <textarea name="DescriptionEN" class="form-control" type="text"></textarea>
            </div>
            <div class="form-group">
                <label class="control-label">@SharedLocalizer["Tags"]</label>
                <textarea name="Tags" class="form-control" type="text"></textarea>
            </div>
            <div class="form-group">
                <label class="control-label">@SharedLocalizer["GeoServerStyle"]</label>
                <select name="Style" class="form-control" asp-items="ViewBag.Styles"></select>
            </div>
            <div class="form-group">
                <label class="control-label">@SharedLocalizer["AsLakeLayer"]</label>
                @Html.CheckBox("AsLakeLayer", null, new { @onclick = "AsLakeLayerF()", @id = "AsLakeLayer" })
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleWaterLevel"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorWaterLevel()" />
                    <table id="ColorsWaterLevel" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsWaterLevel"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesWaterLevel" hidden="hidden"></label>
                                    <label id="MinValuesWaterLevel" asp-for="MinValuesWaterLevel"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsWaterLevel.Count(); i++)
                            {
                                string Color = "ColorWaterLevel" + i.ToString(),
                                    Value = "ValueInputWaterLevel" + i.ToString(),
                                    inputid = "ColorInputWaterLevel" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsWaterLevel[@i].Color" value="@Model.LayerIntervalsWaterLevel[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsWaterLevel[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsWaterLevel[@i].MinValue" value="@Model.LayerIntervalsWaterLevel[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsWaterLevel[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorWaterLevel(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleSurfaceFlow"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorSurfaceFlow()" />
                    <table id="ColorsSurfaceFlow" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsSurfaceFlow"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesSurfaceFlow" hidden="hidden"></label>
                                    <label id="MinValuesSurfaceFlow" asp-for="MinValuesSurfaceFlow"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsSurfaceFlow.Count(); i++)
                            {
                                string Color = "ColorSurfaceFlow" + i.ToString(),
                                    Value = "ValueInputSurfaceFlow" + i.ToString(),
                                    inputid = "ColorInputSurfaceFlow" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsSurfaceFlow[@i].Color" value="@Model.LayerIntervalsSurfaceFlow[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsSurfaceFlow[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsSurfaceFlow[@i].MinValue" value="@Model.LayerIntervalsSurfaceFlow[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsSurfaceFlow[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorSurfaceFlow(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StylePrecipitation"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorPrecipitation()" />
                    <table id="ColorsPrecipitation" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsPrecipitation"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesPrecipitation" hidden="hidden"></label>
                                    <label id="MinValuesPrecipitation" asp-for="MinValuesPrecipitation"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsPrecipitation.Count(); i++)
                            {
                                string Color = "ColorPrecipitation" + i.ToString(),
                                    Value = "ValueInputPrecipitation" + i.ToString(),
                                    inputid = "ColorInputPrecipitation" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsPrecipitation[@i].Color" value="@Model.LayerIntervalsPrecipitation[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsPrecipitation[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsPrecipitation[@i].MinValue" value="@Model.LayerIntervalsPrecipitation[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsPrecipitation[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorPrecipitation(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleUndergroundFlow"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorUndergroundFlow()" />
                    <table id="ColorsUndergroundFlow" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsUndergroundFlow"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesUndergroundFlow" hidden="hidden"></label>
                                    <label id="MinValuesUndergroundFlow" asp-for="MinValuesUndergroundFlow"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsUndergroundFlow.Count(); i++)
                            {
                                string Color = "ColorUndergroundFlow" + i.ToString(),
                                    Value = "ValueInputUndergroundFlow" + i.ToString(),
                                    inputid = "ColorInputUndergroundFlow" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsUndergroundFlow[@i].Color" value="@Model.LayerIntervalsUndergroundFlow[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsUndergroundFlow[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsUndergroundFlow[@i].MinValue" value="@Model.LayerIntervalsUndergroundFlow[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsUndergroundFlow[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorUndergroundFlow(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleSurfaceOutflow"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorSurfaceOutflow()" />
                    <table id="ColorsSurfaceOutflow" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsSurfaceOutflow"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesSurfaceOutflow" hidden="hidden"></label>
                                    <label id="MinValuesSurfaceOutflow" asp-for="MinValuesSurfaceOutflow"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsSurfaceOutflow.Count(); i++)
                            {
                                string Color = "ColorSurfaceOutflow" + i.ToString(),
                                    Value = "ValueInputSurfaceOutflow" + i.ToString(),
                                    inputid = "ColorInputSurfaceOutflow" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsSurfaceOutflow[@i].Color" value="@Model.LayerIntervalsSurfaceOutflow[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsSurfaceOutflow[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsSurfaceOutflow[@i].MinValue" value="@Model.LayerIntervalsSurfaceOutflow[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsSurfaceOutflow[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorSurfaceOutflow(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleEvaporation"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorEvaporation()" />
                    <table id="ColorsEvaporation" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsEvaporation"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesEvaporation" hidden="hidden"></label>
                                    <label id="MinValuesEvaporation" asp-for="MinValuesEvaporation"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsEvaporation.Count(); i++)
                            {
                                string Color = "ColorEvaporation" + i.ToString(),
                                    Value = "ValueInputEvaporation" + i.ToString(),
                                    inputid = "ColorInputEvaporation" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsEvaporation[@i].Color" value="@Model.LayerIntervalsEvaporation[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsEvaporation[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsEvaporation[@i].MinValue" value="@Model.LayerIntervalsEvaporation[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsEvaporation[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorEvaporation(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleUndergroundOutflow"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorUndergroundOutflow()" />
                    <table id="ColorsUndergroundOutflow" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsUndergroundOutflow"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesUndergroundOutflow" hidden="hidden"></label>
                                    <label id="MinValuesUndergroundOutflow" asp-for="MinValuesUndergroundOutflow"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsUndergroundOutflow.Count(); i++)
                            {
                                string Color = "ColorUndergroundOutflow" + i.ToString(),
                                    Value = "ValueInputUndergroundOutflow" + i.ToString(),
                                    inputid = "ColorInputUndergroundOutflow" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsUndergroundOutflow[@i].Color" value="@Model.LayerIntervalsUndergroundOutflow[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsUndergroundOutflow[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsUndergroundOutflow[@i].MinValue" value="@Model.LayerIntervalsUndergroundOutflow[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsUndergroundOutflow[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorUndergroundOutflow(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryMineralization"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryMineralization()" />
                    <table id="ColorsHydrochemistryMineralization" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryMineralization"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryMineralization" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryMineralization" asp-for="MinValuesHydrochemistryMineralization"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryMineralization.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryMineralization" + i.ToString(),
                                    Value = "ValueInputHydrochemistryMineralization" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryMineralization" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryMineralization[@i].Color" value="@Model.LayerIntervalsHydrochemistryMineralization[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryMineralization[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryMineralization[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryMineralization[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryMineralization[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryMineralization(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryTotalHardness"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryTotalHardness()" />
                    <table id="ColorsHydrochemistryTotalHardness" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryTotalHardness"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryTotalHardness" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryTotalHardness" asp-for="MinValuesHydrochemistryTotalHardness"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryTotalHardness.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryTotalHardness" + i.ToString(),
                                    Value = "ValueInputHydrochemistryTotalHardness" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryTotalHardness" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryTotalHardness[@i].Color" value="@Model.LayerIntervalsHydrochemistryTotalHardness[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryTotalHardness[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryTotalHardness[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryTotalHardness[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryTotalHardness[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryTotalHardness(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryDissOxygWater"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryDissOxygWater()" />
                    <table id="ColorsHydrochemistryDissOxygWater" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryDissOxygWater"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryDissOxygWater" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryDissOxygWater" asp-for="MinValuesHydrochemistryDissOxygWater"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryDissOxygWater.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryDissOxygWater" + i.ToString(),
                                    Value = "ValueInputHydrochemistryDissOxygWater" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryDissOxygWater" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryDissOxygWater[@i].Color" value="@Model.LayerIntervalsHydrochemistryDissOxygWater[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryDissOxygWater[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryDissOxygWater[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryDissOxygWater[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryDissOxygWater[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryDissOxygWater(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryPercentOxygWater"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryPercentOxygWater()" />
                    <table id="ColorsHydrochemistryPercentOxygWater" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryPercentOxygWater"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryPercentOxygWater" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryPercentOxygWater" asp-for="MinValuesHydrochemistryPercentOxygWater"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryPercentOxygWater.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryPercentOxygWater" + i.ToString(),
                                    Value = "ValueInputHydrochemistryPercentOxygWater" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryPercentOxygWater" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryPercentOxygWater[@i].Color" value="@Model.LayerIntervalsHydrochemistryPercentOxygWater[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryPercentOxygWater[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryPercentOxygWater[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryPercentOxygWater[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryPercentOxygWater[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryPercentOxygWater(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistrypH"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistrypH()" />
                    <table id="ColorsHydrochemistrypH" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistrypH"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistrypH" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistrypH" asp-for="MinValuesHydrochemistrypH"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistrypH.Count(); i++)
                            {
                                string Color = "ColorHydrochemistrypH" + i.ToString(),
                                    Value = "ValueInputHydrochemistrypH" + i.ToString(),
                                    inputid = "ColorInputHydrochemistrypH" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistrypH[@i].Color" value="@Model.LayerIntervalsHydrochemistrypH[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistrypH[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistrypH[@i].MinValue" value="@Model.LayerIntervalsHydrochemistrypH[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistrypH[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistrypH(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryOrganicSubstances"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryOrganicSubstances()" />
                    <table id="ColorsHydrochemistryOrganicSubstances" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryOrganicSubstances"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryOrganicSubstances" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryOrganicSubstances" asp-for="MinValuesHydrochemistryOrganicSubstances"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryOrganicSubstances.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryOrganicSubstances" + i.ToString(),
                                    Value = "ValueInputHydrochemistryOrganicSubstances" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryOrganicSubstances" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryOrganicSubstances[@i].Color" value="@Model.LayerIntervalsHydrochemistryOrganicSubstances[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryOrganicSubstances[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryOrganicSubstances[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryOrganicSubstances[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryOrganicSubstances[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryOrganicSubstances(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryCa"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryCa()" />
                    <table id="ColorsHydrochemistryCa" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryCa"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryCa" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryCa" asp-for="MinValuesHydrochemistryCa"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryCa.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryCa" + i.ToString(),
                                    Value = "ValueInputHydrochemistryCa" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryCa" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryCa[@i].Color" value="@Model.LayerIntervalsHydrochemistryCa[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCa[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryCa[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryCa[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryCa[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryCa(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryMg"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryMg()" />
                    <table id="ColorsHydrochemistryMg" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryMg"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryMg" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryMg" asp-for="MinValuesHydrochemistryMg"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryMg.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryMg" + i.ToString(),
                                    Value = "ValueInputHydrochemistryMg" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryMg" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryMg[@i].Color" value="@Model.LayerIntervalsHydrochemistryMg[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryMg[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryMg[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryMg[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryMg[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryMg(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryNaK"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryNaK()" />
                    <table id="ColorsHydrochemistryNaK" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryNaK"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryNaK" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryNaK" asp-for="MinValuesHydrochemistryNaK"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryNaK.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryNaK" + i.ToString(),
                                    Value = "ValueInputHydrochemistryNaK" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryNaK" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryNaK[@i].Color" value="@Model.LayerIntervalsHydrochemistryNaK[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNaK[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryNaK[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryNaK[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryNaK[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryNaK(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryCl"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryCl()" />
                    <table id="ColorsHydrochemistryCl" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryCl"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryCl" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryCl" asp-for="MinValuesHydrochemistryCl"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryCl.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryCl" + i.ToString(),
                                    Value = "ValueInputHydrochemistryCl" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryCl" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryCl[@i].Color" value="@Model.LayerIntervalsHydrochemistryCl[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCl[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryCl[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryCl[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryCl[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryCl(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryHCO"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryHCO()" />
                    <table id="ColorsHydrochemistryHCO" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryHCO"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryHCO" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryHCO" asp-for="MinValuesHydrochemistryHCO"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryHCO.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryHCO" + i.ToString(),
                                    Value = "ValueInputHydrochemistryHCO" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryHCO" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryHCO[@i].Color" value="@Model.LayerIntervalsHydrochemistryHCO[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryHCO[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryHCO[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryHCO[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryHCO[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryHCO(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistrySO"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistrySO()" />
                    <table id="ColorsHydrochemistrySO" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistrySO"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistrySO" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistrySO" asp-for="MinValuesHydrochemistrySO"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistrySO.Count(); i++)
                            {
                                string Color = "ColorHydrochemistrySO" + i.ToString(),
                                    Value = "ValueInputHydrochemistrySO" + i.ToString(),
                                    inputid = "ColorInputHydrochemistrySO" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistrySO[@i].Color" value="@Model.LayerIntervalsHydrochemistrySO[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistrySO[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistrySO[@i].MinValue" value="@Model.LayerIntervalsHydrochemistrySO[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistrySO[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistrySO(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryNH"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryNH()" />
                    <table id="ColorsHydrochemistryNH" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryNH"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryNH" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryNH" asp-for="MinValuesHydrochemistryNH"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryNH.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryNH" + i.ToString(),
                                    Value = "ValueInputHydrochemistryNH" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryNH" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryNH[@i].Color" value="@Model.LayerIntervalsHydrochemistryNH[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNH[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryNH[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryNH[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryNH[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryNH(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryNO2"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryNO2()" />
                    <table id="ColorsHydrochemistryNO2" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryNO2"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryNO2" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryNO2" asp-for="MinValuesHydrochemistryNO2"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryNO2.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryNO2" + i.ToString(),
                                    Value = "ValueInputHydrochemistryNO2" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryNO2" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryNO2[@i].Color" value="@Model.LayerIntervalsHydrochemistryNO2[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNO2[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryNO2[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryNO2[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryNO2[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryNO2(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryNO3"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryNO3()" />
                    <table id="ColorsHydrochemistryNO3" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryNO3"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryNO3" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryNO3" asp-for="MinValuesHydrochemistryNO3"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryNO3.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryNO3" + i.ToString(),
                                    Value = "ValueInputHydrochemistryNO3" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryNO3" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryNO3[@i].Color" value="@Model.LayerIntervalsHydrochemistryNO3[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNO3[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryNO3[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryNO3[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryNO3[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryNO3(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryPPO"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryPPO()" />
                    <table id="ColorsHydrochemistryPPO" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryPPO"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryPPO" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryPPO" asp-for="MinValuesHydrochemistryPPO"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryPPO.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryPPO" + i.ToString(),
                                    Value = "ValueInputHydrochemistryPPO" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryPPO" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryPPO[@i].Color" value="@Model.LayerIntervalsHydrochemistryPPO[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryPPO[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryPPO[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryPPO[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryPPO[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryPPO(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryCu"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryCu()" />
                    <table id="ColorsHydrochemistryCu" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryCu"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryCu" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryCu" asp-for="MinValuesHydrochemistryCu"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryCu.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryCu" + i.ToString(),
                                    Value = "ValueInputHydrochemistryCu" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryCu" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryCu[@i].Color" value="@Model.LayerIntervalsHydrochemistryCu[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCu[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryCu[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryCu[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryCu[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryCu(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryZn"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryZn()" />
                    <table id="ColorsHydrochemistryZn" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryZn"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryZn" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryZn" asp-for="MinValuesHydrochemistryZn"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryZn.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryZn" + i.ToString(),
                                    Value = "ValueInputHydrochemistryZn" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryZn" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryZn[@i].Color" value="@Model.LayerIntervalsHydrochemistryZn[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryZn[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryZn[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryZn[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryZn[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryZn(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryMn"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryMn()" />
                    <table id="ColorsHydrochemistryMn" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryMn"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryMn" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryMn" asp-for="MinValuesHydrochemistryMn"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryMn.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryMn" + i.ToString(),
                                    Value = "ValueInputHydrochemistryMn" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryMn" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryMn[@i].Color" value="@Model.LayerIntervalsHydrochemistryMn[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryMn[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryMn[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryMn[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryMn[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryMn(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryPb"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryPb()" />
                    <table id="ColorsHydrochemistryPb" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryPb"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryPb" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryPb" asp-for="MinValuesHydrochemistryPb"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryPb.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryPb" + i.ToString(),
                                    Value = "ValueInputHydrochemistryPb" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryPb" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryPb[@i].Color" value="@Model.LayerIntervalsHydrochemistryPb[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryPb[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryPb[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryPb[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryPb[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryPb(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryNi"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryNi()" />
                    <table id="ColorsHydrochemistryNi" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryNi"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryNi" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryNi" asp-for="MinValuesHydrochemistryNi"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryNi.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryNi" + i.ToString(),
                                    Value = "ValueInputHydrochemistryNi" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryNi" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryNi[@i].Color" value="@Model.LayerIntervalsHydrochemistryNi[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNi[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryNi[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryNi[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryNi[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryNi(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryCd"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryCd()" />
                    <table id="ColorsHydrochemistryCd" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryCd"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryCd" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryCd" asp-for="MinValuesHydrochemistryCd"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryCd.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryCd" + i.ToString(),
                                    Value = "ValueInputHydrochemistryCd" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryCd" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryCd[@i].Color" value="@Model.LayerIntervalsHydrochemistryCd[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCd[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryCd[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryCd[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryCd[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryCd(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryCo"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryCo()" />
                    <table id="ColorsHydrochemistryCo" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryCo"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryCo" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryCo" asp-for="MinValuesHydrochemistryCo"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryCo.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryCo" + i.ToString(),
                                    Value = "ValueInputHydrochemistryCo" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryCo" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryCo[@i].Color" value="@Model.LayerIntervalsHydrochemistryCo[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCo[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryCo[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryCo[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryCo[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryCo(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group AsLakeLayer" hidden="hidden">
                <label class="col-md-2 control-label">@SharedLocalizer["StyleHydrochemistryCIWP"]</label>
                <div class="col-md-10">
                    <input type="button" value="@SharedLocalizer["Add"]" class="btn btn-default" onclick="AddColorHydrochemistryCIWP()" />
                    <table id="ColorsHydrochemistryCIWP" class="table">
                        <thead>
                            <tr>
                                <th>
                                    <label asp-for="ColorsHydrochemistryCIWP"></label>
                                </th>
                                <th>
                                    <label id="minvalue" asp-for="MinValuesHydrochemistryCIWP" hidden="hidden"></label>
                                    <label id="MinValuesHydrochemistryCIWP" asp-for="MinValuesHydrochemistryCIWP"></label>
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.LayerIntervalsHydrochemistryCIWP.Count(); i++)
                            {
                                string Color = "ColorHydrochemistryCIWP" + i.ToString(),
                                    Value = "ValueInputHydrochemistryCIWP" + i.ToString(),
                                    inputid = "ColorInputHydrochemistryCIWP" + i.ToString();
                                <tr id="@Color">
                                    <td>
                                        <input id="@inputid" type="text" name="LayerIntervalsHydrochemistryCIWP[@i].Color" value="@Model.LayerIntervalsHydrochemistryCIWP[i].Color" class="form-control-color" />
                                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCIWP[@i].Color"></span>
                                    </td>
                                    <td>
                                        <input id="@Value" type="text" name="LayerIntervalsHydrochemistryCIWP[@i].MinValue" value="@Model.LayerIntervalsHydrochemistryCIWP[i].MinValue" class="form-control" />
                                        @Html.ValidationMessageFor(model => model.LayerIntervalsHydrochemistryCIWP[i].MinValue, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <input type="button" value="@SharedLocalizer["Remove"]" class="btn btn-default" onclick="RemoveColorHydrochemistryCIWP(@i)" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="@SharedLocalizer["Publish"]" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>*@

<script>
    var ColorsWaterLevelCount = parseInt($('#ColorsWaterLevelCount').html());
    function AddColorWaterLevel() {
        var tr = '<tr id="ColorWaterLevel' + ColorsWaterLevelCount + '"><td><input id="ColorInputWaterLevel' + ColorsWaterLevelCount + '" type="text" name="LayerIntervalsWaterLevel[' + ColorsWaterLevelCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsWaterLevel[' + ColorsWaterLevelCount + '].Color"></span></td><td>' +
            '<input id="ValueInputWaterLevel' + ColorsWaterLevelCount + '" type="text" name="LayerIntervalsWaterLevel[' + ColorsWaterLevelCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsWaterLevel[' + ColorsWaterLevelCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorWaterLevel(' + ColorsWaterLevelCount + ')" /></td></tr>'
        $('#ColorsWaterLevel > tbody:last-child').append(tr);
        $("#ColorInputWaterLevel" + ColorsWaterLevelCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsWaterLevelCount++;
    };
    function RemoveColorWaterLevel(row) {
        $('#ColorInputWaterLevel' + row).val('');
        $('#ValueInputWaterLevel' + row).val('0');
        $('#ColorWaterLevel' + row).hide();
    };

    var ColorsSurfaceFlowCount = parseInt($('#ColorsSurfaceFlowCount').html());
    function AddColorSurfaceFlow() {
        var tr = '<tr id="ColorSurfaceFlow' + ColorsSurfaceFlowCount + '"><td><input id="ColorInputSurfaceFlow' + ColorsSurfaceFlowCount + '" type="text" name="LayerIntervalsSurfaceFlow[' + ColorsSurfaceFlowCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsSurfaceFlow[' + ColorsSurfaceFlowCount + '].Color"></span></td><td>' +
            '<input id="ValueInputSurfaceFlow' + ColorsSurfaceFlowCount + '" type="text" name="LayerIntervalsSurfaceFlow[' + ColorsSurfaceFlowCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsSurfaceFlow[' + ColorsSurfaceFlowCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorSurfaceFlow(' + ColorsSurfaceFlowCount + ')" /></td></tr>'
        $('#ColorsSurfaceFlow > tbody:last-child').append(tr);
        $("#ColorInputSurfaceFlow" + ColorsSurfaceFlowCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsSurfaceFlowCount++;
    };
    function RemoveColorSurfaceFlow(row) {
        $('#ColorInputSurfaceFlow' + row).val('');
        $('#ValueInputSurfaceFlow' + row).val('0');
        $('#ColorSurfaceFlow' + row).hide();
    };

    var ColorsPrecipitationCount = parseInt($('#ColorsPrecipitationCount').html());
    function AddColorPrecipitation() {
        var tr = '<tr id="ColorPrecipitation' + ColorsPrecipitationCount + '"><td><input id="ColorInputPrecipitation' + ColorsPrecipitationCount + '" type="text" name="LayerIntervalsPrecipitation[' + ColorsPrecipitationCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsPrecipitation[' + ColorsPrecipitationCount + '].Color"></span></td><td>' +
            '<input id="ValueInputPrecipitation' + ColorsPrecipitationCount + '" type="text" name="LayerIntervalsPrecipitation[' + ColorsPrecipitationCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsPrecipitation[' + ColorsPrecipitationCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorPrecipitation(' + ColorsPrecipitationCount + ')" /></td></tr>'
        $('#ColorsPrecipitation > tbody:last-child').append(tr);
        $("#ColorInputPrecipitation" + ColorsPrecipitationCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsPrecipitationCount++;
    };
    function RemoveColorPrecipitation(row) {
        $('#ColorInputPrecipitation' + row).val('');
        $('#ValueInputPrecipitation' + row).val('0');
        $('#ColorPrecipitation' + row).hide();
    };

    var ColorsUndergroundFlowCount = parseInt($('#ColorsUndergroundFlowCount').html());
    function AddColorUndergroundFlow() {
        var tr = '<tr id="ColorUndergroundFlow' + ColorsUndergroundFlowCount + '"><td><input id="ColorInputUndergroundFlow' + ColorsUndergroundFlowCount + '" type="text" name="LayerIntervalsUndergroundFlow[' + ColorsUndergroundFlowCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsUndergroundFlow[' + ColorsUndergroundFlowCount + '].Color"></span></td><td>' +
            '<input id="ValueInputUndergroundFlow' + ColorsUndergroundFlowCount + '" type="text" name="LayerIntervalsUndergroundFlow[' + ColorsUndergroundFlowCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsUndergroundFlow[' + ColorsUndergroundFlowCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorUndergroundFlow(' + ColorsUndergroundFlowCount + ')" /></td></tr>'
        $('#ColorsUndergroundFlow > tbody:last-child').append(tr);
        $("#ColorInputUndergroundFlow" + ColorsUndergroundFlowCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsUndergroundFlowCount++;
    };
    function RemoveColorUndergroundFlow(row) {
        $('#ColorInputUndergroundFlow' + row).val('');
        $('#ValueInputUndergroundFlow' + row).val('0');
        $('#ColorUndergroundFlow' + row).hide();
    };

    var ColorsSurfaceOutflowCount = parseInt($('#ColorsSurfaceOutflowCount').html());
    function AddColorSurfaceOutflow() {
        var tr = '<tr id="ColorSurfaceOutflow' + ColorsSurfaceOutflowCount + '"><td><input id="ColorInputSurfaceOutflow' + ColorsSurfaceOutflowCount + '" type="text" name="LayerIntervalsSurfaceOutflow[' + ColorsSurfaceOutflowCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsSurfaceOutflow[' + ColorsSurfaceOutflowCount + '].Color"></span></td><td>' +
            '<input id="ValueInputSurfaceOutflow' + ColorsSurfaceOutflowCount + '" type="text" name="LayerIntervalsSurfaceOutflow[' + ColorsSurfaceOutflowCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsSurfaceOutflow[' + ColorsSurfaceOutflowCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorSurfaceOutflow(' + ColorsSurfaceOutflowCount + ')" /></td></tr>'
        $('#ColorsSurfaceOutflow > tbody:last-child').append(tr);
        $("#ColorInputSurfaceOutflow" + ColorsSurfaceOutflowCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsSurfaceOutflowCount++;
    };
    function RemoveColorSurfaceOutflow(row) {
        $('#ColorInputSurfaceOutflow' + row).val('');
        $('#ValueInputSurfaceOutflow' + row).val('0');
        $('#ColorSurfaceOutflow' + row).hide();
    };

    var ColorsEvaporationCount = parseInt($('#ColorsEvaporationCount').html());
    function AddColorEvaporation() {
        var tr = '<tr id="ColorEvaporation' + ColorsEvaporationCount + '"><td><input id="ColorInputEvaporation' + ColorsEvaporationCount + '" type="text" name="LayerIntervalsEvaporation[' + ColorsEvaporationCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsEvaporation[' + ColorsEvaporationCount + '].Color"></span></td><td>' +
            '<input id="ValueInputEvaporation' + ColorsEvaporationCount + '" type="text" name="LayerIntervalsEvaporation[' + ColorsEvaporationCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsEvaporation[' + ColorsEvaporationCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorEvaporation(' + ColorsEvaporationCount + ')" /></td></tr>'
        $('#ColorsEvaporation > tbody:last-child').append(tr);
        $("#ColorInputEvaporation" + ColorsEvaporationCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsEvaporationCount++;
    };
    function RemoveColorEvaporation(row) {
        $('#ColorInputEvaporation' + row).val('');
        $('#ValueInputEvaporation' + row).val('0');
        $('#ColorEvaporation' + row).hide();
    };

    var ColorsUndergroundOutflowCount = parseInt($('#ColorsUndergroundOutflowCount').html());
    function AddColorUndergroundOutflow() {
        var tr = '<tr id="ColorUndergroundOutflow' + ColorsUndergroundOutflowCount + '"><td><input id="ColorInputUndergroundOutflow' + ColorsUndergroundOutflowCount + '" type="text" name="LayerIntervalsUndergroundOutflow[' + ColorsUndergroundOutflowCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsUndergroundOutflow[' + ColorsUndergroundOutflowCount + '].Color"></span></td><td>' +
            '<input id="ValueInputUndergroundOutflow' + ColorsUndergroundOutflowCount + '" type="text" name="LayerIntervalsUndergroundOutflow[' + ColorsUndergroundOutflowCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsUndergroundOutflow[' + ColorsUndergroundOutflowCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorUndergroundOutflow(' + ColorsUndergroundOutflowCount + ')" /></td></tr>'
        $('#ColorsUndergroundOutflow > tbody:last-child').append(tr);
        $("#ColorInputUndergroundOutflow" + ColorsUndergroundOutflowCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsUndergroundOutflowCount++;
    };
    function RemoveColorUndergroundOutflow(row) {
        $('#ColorInputUndergroundOutflow' + row).val('');
        $('#ValueInputUndergroundOutflow' + row).val('0');
        $('#ColorUndergroundOutflow' + row).hide();
    };

    var ColorsHydrochemistryMineralizationCount = parseInt($('#ColorsHydrochemistryMineralizationCount').html());
    function AddColorHydrochemistryMineralization() {
        var tr = '<tr id="ColorHydrochemistryMineralization' + ColorsHydrochemistryMineralizationCount + '"><td><input id="ColorInputHydrochemistryMineralization' + ColorsHydrochemistryMineralizationCount + '" type="text" name="LayerIntervalsHydrochemistryMineralization[' + ColorsHydrochemistryMineralizationCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryMineralization[' + ColorsHydrochemistryMineralizationCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryMineralization' + ColorsHydrochemistryMineralizationCount + '" type="text" name="LayerIntervalsHydrochemistryMineralization[' + ColorsHydrochemistryMineralizationCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryMineralization[' + ColorsHydrochemistryMineralizationCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryMineralization(' + ColorsHydrochemistryMineralizationCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryMineralization > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryMineralization" + ColorsHydrochemistryMineralizationCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryMineralizationCount++;
    };
    function RemoveColorHydrochemistryMineralization(row) {
        $('#ColorInputHydrochemistryMineralization' + row).val('');
        $('#ValueInputHydrochemistryMineralization' + row).val('0');
        $('#ColorHydrochemistryMineralization' + row).hide();
    };

    var ColorsHydrochemistryTotalHardnessCount = parseInt($('#ColorsHydrochemistryTotalHardnessCount').html());
    function AddColorHydrochemistryTotalHardness() {
        var tr = '<tr id="ColorHydrochemistryTotalHardness' + ColorsHydrochemistryTotalHardnessCount + '"><td><input id="ColorInputHydrochemistryTotalHardness' + ColorsHydrochemistryTotalHardnessCount + '" type="text" name="LayerIntervalsHydrochemistryTotalHardness[' + ColorsHydrochemistryTotalHardnessCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryTotalHardness[' + ColorsHydrochemistryTotalHardnessCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryTotalHardness' + ColorsHydrochemistryTotalHardnessCount + '" type="text" name="LayerIntervalsHydrochemistryTotalHardness[' + ColorsHydrochemistryTotalHardnessCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryTotalHardness[' + ColorsHydrochemistryTotalHardnessCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryTotalHardness(' + ColorsHydrochemistryTotalHardnessCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryTotalHardness > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryTotalHardness" + ColorsHydrochemistryTotalHardnessCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryTotalHardnessCount++;
    };
    function RemoveColorHydrochemistryTotalHardness(row) {
        $('#ColorInputHydrochemistryTotalHardness' + row).val('');
        $('#ValueInputHydrochemistryTotalHardness' + row).val('0');
        $('#ColorHydrochemistryTotalHardness' + row).hide();
    };

    var ColorsHydrochemistryDissOxygWaterCount = parseInt($('#ColorsHydrochemistryDissOxygWaterCount').html());
    function AddColorHydrochemistryDissOxygWater() {
        var tr = '<tr id="ColorHydrochemistryDissOxygWater' + ColorsHydrochemistryDissOxygWaterCount + '"><td><input id="ColorInputHydrochemistryDissOxygWater' + ColorsHydrochemistryDissOxygWaterCount + '" type="text" name="LayerIntervalsHydrochemistryDissOxygWater[' + ColorsHydrochemistryDissOxygWaterCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryDissOxygWater[' + ColorsHydrochemistryDissOxygWaterCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryDissOxygWater' + ColorsHydrochemistryDissOxygWaterCount + '" type="text" name="LayerIntervalsHydrochemistryDissOxygWater[' + ColorsHydrochemistryDissOxygWaterCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryDissOxygWater[' + ColorsHydrochemistryDissOxygWaterCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryDissOxygWater(' + ColorsHydrochemistryDissOxygWaterCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryDissOxygWater > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryDissOxygWater" + ColorsHydrochemistryDissOxygWaterCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryDissOxygWaterCount++;
    };
    function RemoveColorHydrochemistryDissOxygWater(row) {
        $('#ColorInputHydrochemistryDissOxygWater' + row).val('');
        $('#ValueInputHydrochemistryDissOxygWater' + row).val('0');
        $('#ColorHydrochemistryDissOxygWater' + row).hide();
    };

    var ColorsHydrochemistryPercentOxygWaterCount = parseInt($('#ColorsHydrochemistryPercentOxygWaterCount').html());
    function AddColorHydrochemistryPercentOxygWater() {
        var tr = '<tr id="ColorHydrochemistryPercentOxygWater' + ColorsHydrochemistryPercentOxygWaterCount + '"><td><input id="ColorInputHydrochemistryPercentOxygWater' + ColorsHydrochemistryPercentOxygWaterCount + '" type="text" name="LayerIntervalsHydrochemistryPercentOxygWater[' + ColorsHydrochemistryPercentOxygWaterCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryPercentOxygWater[' + ColorsHydrochemistryPercentOxygWaterCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryPercentOxygWater' + ColorsHydrochemistryPercentOxygWaterCount + '" type="text" name="LayerIntervalsHydrochemistryPercentOxygWater[' + ColorsHydrochemistryPercentOxygWaterCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryPercentOxygWater[' + ColorsHydrochemistryPercentOxygWaterCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryPercentOxygWater(' + ColorsHydrochemistryPercentOxygWaterCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryPercentOxygWater > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryPercentOxygWater" + ColorsHydrochemistryPercentOxygWaterCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryPercentOxygWaterCount++;
    };
    function RemoveColorHydrochemistryPercentOxygWater(row) {
        $('#ColorInputHydrochemistryPercentOxygWater' + row).val('');
        $('#ValueInputHydrochemistryPercentOxygWater' + row).val('0');
        $('#ColorHydrochemistryPercentOxygWater' + row).hide();
    };

    var ColorsHydrochemistrypHCount = parseInt($('#ColorsHydrochemistrypHCount').html());
    function AddColorHydrochemistrypH() {
        var tr = '<tr id="ColorHydrochemistrypH' + ColorsHydrochemistrypHCount + '"><td><input id="ColorInputHydrochemistrypH' + ColorsHydrochemistrypHCount + '" type="text" name="LayerIntervalsHydrochemistrypH[' + ColorsHydrochemistrypHCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistrypH[' + ColorsHydrochemistrypHCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistrypH' + ColorsHydrochemistrypHCount + '" type="text" name="LayerIntervalsHydrochemistrypH[' + ColorsHydrochemistrypHCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistrypH[' + ColorsHydrochemistrypHCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistrypH(' + ColorsHydrochemistrypHCount + ')" /></td></tr>'
        $('#ColorsHydrochemistrypH > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistrypH" + ColorsHydrochemistrypHCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistrypHCount++;
    };
    function RemoveColorHydrochemistrypH(row) {
        $('#ColorInputHydrochemistrypH' + row).val('');
        $('#ValueInputHydrochemistrypH' + row).val('0');
        $('#ColorHydrochemistrypH' + row).hide();
    };

    var ColorsHydrochemistryOrganicSubstancesCount = parseInt($('#ColorsHydrochemistryOrganicSubstancesCount').html());
    function AddColorHydrochemistryOrganicSubstances() {
        var tr = '<tr id="ColorHydrochemistryOrganicSubstances' + ColorsHydrochemistryOrganicSubstancesCount + '"><td><input id="ColorInputHydrochemistryOrganicSubstances' + ColorsHydrochemistryOrganicSubstancesCount + '" type="text" name="LayerIntervalsHydrochemistryOrganicSubstances[' + ColorsHydrochemistryOrganicSubstancesCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryOrganicSubstances[' + ColorsHydrochemistryOrganicSubstancesCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryOrganicSubstances' + ColorsHydrochemistryOrganicSubstancesCount + '" type="text" name="LayerIntervalsHydrochemistryOrganicSubstances[' + ColorsHydrochemistryOrganicSubstancesCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryOrganicSubstances[' + ColorsHydrochemistryOrganicSubstancesCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryOrganicSubstances(' + ColorsHydrochemistryOrganicSubstancesCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryOrganicSubstances > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryOrganicSubstances" + ColorsHydrochemistryOrganicSubstancesCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryOrganicSubstancesCount++;
    };
    function RemoveColorHydrochemistryOrganicSubstances(row) {
        $('#ColorInputHydrochemistryOrganicSubstances' + row).val('');
        $('#ValueInputHydrochemistryOrganicSubstances' + row).val('0');
        $('#ColorHydrochemistryOrganicSubstances' + row).hide();
    };

    var ColorsHydrochemistryCaCount = parseInt($('#ColorsHydrochemistryCaCount').html());
    function AddColorHydrochemistryCa() {
        var tr = '<tr id="ColorHydrochemistryCa' + ColorsHydrochemistryCaCount + '"><td><input id="ColorInputHydrochemistryCa' + ColorsHydrochemistryCaCount + '" type="text" name="LayerIntervalsHydrochemistryCa[' + ColorsHydrochemistryCaCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCa[' + ColorsHydrochemistryCaCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryCa' + ColorsHydrochemistryCaCount + '" type="text" name="LayerIntervalsHydrochemistryCa[' + ColorsHydrochemistryCaCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCa[' + ColorsHydrochemistryCaCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryCa(' + ColorsHydrochemistryCaCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryCa > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryCa" + ColorsHydrochemistryCaCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryCaCount++;
    };
    function RemoveColorHydrochemistryCa(row) {
        $('#ColorInputHydrochemistryCa' + row).val('');
        $('#ValueInputHydrochemistryCa' + row).val('0');
        $('#ColorHydrochemistryCa' + row).hide();
    };

    var ColorsHydrochemistryMgCount = parseInt($('#ColorsHydrochemistryMgCount').html());
    function AddColorHydrochemistryMg() {
        var tr = '<tr id="ColorHydrochemistryMg' + ColorsHydrochemistryMgCount + '"><td><input id="ColorInputHydrochemistryMg' + ColorsHydrochemistryMgCount + '" type="text" name="LayerIntervalsHydrochemistryMg[' + ColorsHydrochemistryMgCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryMg[' + ColorsHydrochemistryMgCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryMg' + ColorsHydrochemistryMgCount + '" type="text" name="LayerIntervalsHydrochemistryMg[' + ColorsHydrochemistryMgCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryMg[' + ColorsHydrochemistryMgCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryMg(' + ColorsHydrochemistryMgCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryMg > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryMg" + ColorsHydrochemistryMgCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryMgCount++;
    };
    function RemoveColorHydrochemistryMg(row) {
        $('#ColorInputHydrochemistryMg' + row).val('');
        $('#ValueInputHydrochemistryMg' + row).val('0');
        $('#ColorHydrochemistryMg' + row).hide();
    };

    var ColorsHydrochemistryNaKCount = parseInt($('#ColorsHydrochemistryNaKCount').html());
    function AddColorHydrochemistryNaK() {
        var tr = '<tr id="ColorHydrochemistryNaK' + ColorsHydrochemistryNaKCount + '"><td><input id="ColorInputHydrochemistryNaK' + ColorsHydrochemistryNaKCount + '" type="text" name="LayerIntervalsHydrochemistryNaK[' + ColorsHydrochemistryNaKCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNaK[' + ColorsHydrochemistryNaKCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryNaK' + ColorsHydrochemistryNaKCount + '" type="text" name="LayerIntervalsHydrochemistryNaK[' + ColorsHydrochemistryNaKCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNaK[' + ColorsHydrochemistryNaKCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryNaK(' + ColorsHydrochemistryNaKCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryNaK > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryNaK" + ColorsHydrochemistryNaKCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryNaKCount++;
    };
    function RemoveColorHydrochemistryNaK(row) {
        $('#ColorInputHydrochemistryNaK' + row).val('');
        $('#ValueInputHydrochemistryNaK' + row).val('0');
        $('#ColorHydrochemistryNaK' + row).hide();
    };

    var ColorsHydrochemistryClCount = parseInt($('#ColorsHydrochemistryClCount').html());
    function AddColorHydrochemistryCl() {
        var tr = '<tr id="ColorHydrochemistryCl' + ColorsHydrochemistryClCount + '"><td><input id="ColorInputHydrochemistryCl' + ColorsHydrochemistryClCount + '" type="text" name="LayerIntervalsHydrochemistryCl[' + ColorsHydrochemistryClCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCl[' + ColorsHydrochemistryClCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryCl' + ColorsHydrochemistryClCount + '" type="text" name="LayerIntervalsHydrochemistryCl[' + ColorsHydrochemistryClCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCl[' + ColorsHydrochemistryClCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryCl(' + ColorsHydrochemistryClCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryCl > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryCl" + ColorsHydrochemistryClCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryClCount++;
    };
    function RemoveColorHydrochemistryCl(row) {
        $('#ColorInputHydrochemistryCl' + row).val('');
        $('#ValueInputHydrochemistryCl' + row).val('0');
        $('#ColorHydrochemistryCl' + row).hide();
    };

    var ColorsHydrochemistryHCOCount = parseInt($('#ColorsHydrochemistryHCOCount').html());
    function AddColorHydrochemistryHCO() {
        var tr = '<tr id="ColorHydrochemistryHCO' + ColorsHydrochemistryHCOCount + '"><td><input id="ColorInputHydrochemistryHCO' + ColorsHydrochemistryHCOCount + '" type="text" name="LayerIntervalsHydrochemistryHCO[' + ColorsHydrochemistryHCOCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryHCO[' + ColorsHydrochemistryHCOCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryHCO' + ColorsHydrochemistryHCOCount + '" type="text" name="LayerIntervalsHydrochemistryHCO[' + ColorsHydrochemistryHCOCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryHCO[' + ColorsHydrochemistryHCOCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryHCO(' + ColorsHydrochemistryHCOCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryHCO > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryHCO" + ColorsHydrochemistryHCOCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryHCOCount++;
    };
    function RemoveColorHydrochemistryHCO(row) {
        $('#ColorInputHydrochemistryHCO' + row).val('');
        $('#ValueInputHydrochemistryHCO' + row).val('0');
        $('#ColorHydrochemistryHCO' + row).hide();
    };

    var ColorsHydrochemistrySOCount = parseInt($('#ColorsHydrochemistrySOCount').html());
    function AddColorHydrochemistrySO() {
        var tr = '<tr id="ColorHydrochemistrySO' + ColorsHydrochemistrySOCount + '"><td><input id="ColorInputHydrochemistrySO' + ColorsHydrochemistrySOCount + '" type="text" name="LayerIntervalsHydrochemistrySO[' + ColorsHydrochemistrySOCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistrySO[' + ColorsHydrochemistrySOCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistrySO' + ColorsHydrochemistrySOCount + '" type="text" name="LayerIntervalsHydrochemistrySO[' + ColorsHydrochemistrySOCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistrySO[' + ColorsHydrochemistrySOCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistrySO(' + ColorsHydrochemistrySOCount + ')" /></td></tr>'
        $('#ColorsHydrochemistrySO > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistrySO" + ColorsHydrochemistrySOCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistrySOCount++;
    };
    function RemoveColorHydrochemistrySO(row) {
        $('#ColorInputHydrochemistrySO' + row).val('');
        $('#ValueInputHydrochemistrySO' + row).val('0');
        $('#ColorHydrochemistrySO' + row).hide();
    };

    var ColorsHydrochemistryNHCount = parseInt($('#ColorsHydrochemistryNHCount').html());
    function AddColorHydrochemistryNH() {
        var tr = '<tr id="ColorHydrochemistryNH' + ColorsHydrochemistryNHCount + '"><td><input id="ColorInputHydrochemistryNH' + ColorsHydrochemistryNHCount + '" type="text" name="LayerIntervalsHydrochemistryNH[' + ColorsHydrochemistryNHCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNH[' + ColorsHydrochemistryNHCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryNH' + ColorsHydrochemistryNHCount + '" type="text" name="LayerIntervalsHydrochemistryNH[' + ColorsHydrochemistryNHCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNH[' + ColorsHydrochemistryNHCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryNH(' + ColorsHydrochemistryNHCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryNH > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryNH" + ColorsHydrochemistryNHCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryNHCount++;
    };
    function RemoveColorHydrochemistryNH(row) {
        $('#ColorInputHydrochemistryNH' + row).val('');
        $('#ValueInputHydrochemistryNH' + row).val('0');
        $('#ColorHydrochemistryNH' + row).hide();
    };

    var ColorsHydrochemistryNO2Count = parseInt($('#ColorsHydrochemistryNO2Count').html());
    function AddColorHydrochemistryNO2() {
        var tr = '<tr id="ColorHydrochemistryNO2' + ColorsHydrochemistryNO2Count + '"><td><input id="ColorInputHydrochemistryNO2' + ColorsHydrochemistryNO2Count + '" type="text" name="LayerIntervalsHydrochemistryNO2[' + ColorsHydrochemistryNO2Count + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNO2[' + ColorsHydrochemistryNO2Count + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryNO2' + ColorsHydrochemistryNO2Count + '" type="text" name="LayerIntervalsHydrochemistryNO2[' + ColorsHydrochemistryNO2Count + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNO2[' + ColorsHydrochemistryNO2Count + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryNO2(' + ColorsHydrochemistryNO2Count + ')" /></td></tr>'
        $('#ColorsHydrochemistryNO2 > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryNO2" + ColorsHydrochemistryNO2Count).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryNO2Count++;
    };
    function RemoveColorHydrochemistryNO2(row) {
        $('#ColorInputHydrochemistryNO2' + row).val('');
        $('#ValueInputHydrochemistryNO2' + row).val('0');
        $('#ColorHydrochemistryNO2' + row).hide();
    };

    var ColorsHydrochemistryNO3Count = parseInt($('#ColorsHydrochemistryNO3Count').html());
    function AddColorHydrochemistryNO3() {
        var tr = '<tr id="ColorHydrochemistryNO3' + ColorsHydrochemistryNO3Count + '"><td><input id="ColorInputHydrochemistryNO3' + ColorsHydrochemistryNO3Count + '" type="text" name="LayerIntervalsHydrochemistryNO3[' + ColorsHydrochemistryNO3Count + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNO3[' + ColorsHydrochemistryNO3Count + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryNO3' + ColorsHydrochemistryNO3Count + '" type="text" name="LayerIntervalsHydrochemistryNO3[' + ColorsHydrochemistryNO3Count + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNO3[' + ColorsHydrochemistryNO3Count + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryNO3(' + ColorsHydrochemistryNO3Count + ')" /></td></tr>'
        $('#ColorsHydrochemistryNO3 > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryNO3" + ColorsHydrochemistryNO3Count).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryNO3Count++;
    };
    function RemoveColorHydrochemistryNO3(row) {
        $('#ColorInputHydrochemistryNO3' + row).val('');
        $('#ValueInputHydrochemistryNO3' + row).val('0');
        $('#ColorHydrochemistryNO3' + row).hide();
    };

    var ColorsHydrochemistryPPOCount = parseInt($('#ColorsHydrochemistryPPOCount').html());
    function AddColorHydrochemistryPPO() {
        var tr = '<tr id="ColorHydrochemistryPPO' + ColorsHydrochemistryPPOCount + '"><td><input id="ColorInputHydrochemistryPPO' + ColorsHydrochemistryPPOCount + '" type="text" name="LayerIntervalsHydrochemistryPPO[' + ColorsHydrochemistryPPOCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryPPO[' + ColorsHydrochemistryPPOCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryPPO' + ColorsHydrochemistryPPOCount + '" type="text" name="LayerIntervalsHydrochemistryPPO[' + ColorsHydrochemistryPPOCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryPPO[' + ColorsHydrochemistryPPOCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryPPO(' + ColorsHydrochemistryPPOCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryPPO > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryPPO" + ColorsHydrochemistryPPOCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryPPOCount++;
    };
    function RemoveColorHydrochemistryPPO(row) {
        $('#ColorInputHydrochemistryPPO' + row).val('');
        $('#ValueInputHydrochemistryPPO' + row).val('0');
        $('#ColorHydrochemistryPPO' + row).hide();
    };

    var ColorsHydrochemistryCuCount = parseInt($('#ColorsHydrochemistryCuCount').html());
    function AddColorHydrochemistryCu() {
        var tr = '<tr id="ColorHydrochemistryCu' + ColorsHydrochemistryCuCount + '"><td><input id="ColorInputHydrochemistryCu' + ColorsHydrochemistryCuCount + '" type="text" name="LayerIntervalsHydrochemistryCu[' + ColorsHydrochemistryCuCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCu[' + ColorsHydrochemistryCuCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryCu' + ColorsHydrochemistryCuCount + '" type="text" name="LayerIntervalsHydrochemistryCu[' + ColorsHydrochemistryCuCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCu[' + ColorsHydrochemistryCuCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryCu(' + ColorsHydrochemistryCuCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryCu > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryCu" + ColorsHydrochemistryCuCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryCuCount++;
    };
    function RemoveColorHydrochemistryCu(row) {
        $('#ColorInputHydrochemistryCu' + row).val('');
        $('#ValueInputHydrochemistryCu' + row).val('0');
        $('#ColorHydrochemistryCu' + row).hide();
    };

    var ColorsHydrochemistryZnCount = parseInt($('#ColorsHydrochemistryZnCount').html());
    function AddColorHydrochemistryZn() {
        var tr = '<tr id="ColorHydrochemistryZn' + ColorsHydrochemistryZnCount + '"><td><input id="ColorInputHydrochemistryZn' + ColorsHydrochemistryZnCount + '" type="text" name="LayerIntervalsHydrochemistryZn[' + ColorsHydrochemistryZnCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryZn[' + ColorsHydrochemistryZnCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryZn' + ColorsHydrochemistryZnCount + '" type="text" name="LayerIntervalsHydrochemistryZn[' + ColorsHydrochemistryZnCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryZn[' + ColorsHydrochemistryZnCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryZn(' + ColorsHydrochemistryZnCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryZn > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryZn" + ColorsHydrochemistryZnCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryZnCount++;
    };
    function RemoveColorHydrochemistryZn(row) {
        $('#ColorInputHydrochemistryZn' + row).val('');
        $('#ValueInputHydrochemistryZn' + row).val('0');
        $('#ColorHydrochemistryZn' + row).hide();
    };

    var ColorsHydrochemistryMnCount = parseInt($('#ColorsHydrochemistryMnCount').html());
    function AddColorHydrochemistryMn() {
        var tr = '<tr id="ColorHydrochemistryMn' + ColorsHydrochemistryMnCount + '"><td><input id="ColorInputHydrochemistryMn' + ColorsHydrochemistryMnCount + '" type="text" name="LayerIntervalsHydrochemistryMn[' + ColorsHydrochemistryMnCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryMn[' + ColorsHydrochemistryMnCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryMn' + ColorsHydrochemistryMnCount + '" type="text" name="LayerIntervalsHydrochemistryMn[' + ColorsHydrochemistryMnCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryMn[' + ColorsHydrochemistryMnCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryMn(' + ColorsHydrochemistryMnCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryMn > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryMn" + ColorsHydrochemistryMnCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryMnCount++;
    };
    function RemoveColorHydrochemistryMn(row) {
        $('#ColorInputHydrochemistryMn' + row).val('');
        $('#ValueInputHydrochemistryMn' + row).val('0');
        $('#ColorHydrochemistryMn' + row).hide();
    };

    var ColorsHydrochemistryPbCount = parseInt($('#ColorsHydrochemistryPbCount').html());
    function AddColorHydrochemistryPb() {
        var tr = '<tr id="ColorHydrochemistryPb' + ColorsHydrochemistryPbCount + '"><td><input id="ColorInputHydrochemistryPb' + ColorsHydrochemistryPbCount + '" type="text" name="LayerIntervalsHydrochemistryPb[' + ColorsHydrochemistryPbCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryPb[' + ColorsHydrochemistryPbCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryPb' + ColorsHydrochemistryPbCount + '" type="text" name="LayerIntervalsHydrochemistryPb[' + ColorsHydrochemistryPbCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryPb[' + ColorsHydrochemistryPbCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryPb(' + ColorsHydrochemistryPbCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryPb > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryPb" + ColorsHydrochemistryPbCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryPbCount++;
    };
    function RemoveColorHydrochemistryPb(row) {
        $('#ColorInputHydrochemistryPb' + row).val('');
        $('#ValueInputHydrochemistryPb' + row).val('0');
        $('#ColorHydrochemistryPb' + row).hide();
    };

    var ColorsHydrochemistryNiCount = parseInt($('#ColorsHydrochemistryNiCount').html());
    function AddColorHydrochemistryNi() {
        var tr = '<tr id="ColorHydrochemistryNi' + ColorsHydrochemistryNiCount + '"><td><input id="ColorInputHydrochemistryNi' + ColorsHydrochemistryNiCount + '" type="text" name="LayerIntervalsHydrochemistryNi[' + ColorsHydrochemistryNiCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNi[' + ColorsHydrochemistryNiCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryNi' + ColorsHydrochemistryNiCount + '" type="text" name="LayerIntervalsHydrochemistryNi[' + ColorsHydrochemistryNiCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryNi[' + ColorsHydrochemistryNiCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryNi(' + ColorsHydrochemistryNiCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryNi > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryNi" + ColorsHydrochemistryNiCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryNiCount++;
    };
    function RemoveColorHydrochemistryNi(row) {
        $('#ColorInputHydrochemistryNi' + row).val('');
        $('#ValueInputHydrochemistryNi' + row).val('0');
        $('#ColorHydrochemistryNi' + row).hide();
    };

    var ColorsHydrochemistryCdCount = parseInt($('#ColorsHydrochemistryCdCount').html());
    function AddColorHydrochemistryCd() {
        var tr = '<tr id="ColorHydrochemistryCd' + ColorsHydrochemistryCdCount + '"><td><input id="ColorInputHydrochemistryCd' + ColorsHydrochemistryCdCount + '" type="text" name="LayerIntervalsHydrochemistryCd[' + ColorsHydrochemistryCdCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCd[' + ColorsHydrochemistryCdCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryCd' + ColorsHydrochemistryCdCount + '" type="text" name="LayerIntervalsHydrochemistryCd[' + ColorsHydrochemistryCdCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCd[' + ColorsHydrochemistryCdCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryCd(' + ColorsHydrochemistryCdCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryCd > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryCd" + ColorsHydrochemistryCdCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryCdCount++;
    };
    function RemoveColorHydrochemistryCd(row) {
        $('#ColorInputHydrochemistryCd' + row).val('');
        $('#ValueInputHydrochemistryCd' + row).val('0');
        $('#ColorHydrochemistryCd' + row).hide();
    };

    var ColorsHydrochemistryCoCount = parseInt($('#ColorsHydrochemistryCoCount').html());
    function AddColorHydrochemistryCo() {
        var tr = '<tr id="ColorHydrochemistryCo' + ColorsHydrochemistryCoCount + '"><td><input id="ColorInputHydrochemistryCo' + ColorsHydrochemistryCoCount + '" type="text" name="LayerIntervalsHydrochemistryCo[' + ColorsHydrochemistryCoCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCo[' + ColorsHydrochemistryCoCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryCo' + ColorsHydrochemistryCoCount + '" type="text" name="LayerIntervalsHydrochemistryCo[' + ColorsHydrochemistryCoCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCo[' + ColorsHydrochemistryCoCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryCo(' + ColorsHydrochemistryCoCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryCo > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryCo" + ColorsHydrochemistryCoCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryCoCount++;
    };
    function RemoveColorHydrochemistryCo(row) {
        $('#ColorInputHydrochemistryCo' + row).val('');
        $('#ValueInputHydrochemistryCo' + row).val('0');
        $('#ColorHydrochemistryCo' + row).hide();
    };

    var ColorsHydrochemistryCIWPCount = parseInt($('#ColorsHydrochemistryCIWPCount').html());
    function AddColorHydrochemistryCIWP() {
        var tr = '<tr id="ColorHydrochemistryCIWP' + ColorsHydrochemistryCIWPCount + '"><td><input id="ColorInputHydrochemistryCIWP' + ColorsHydrochemistryCIWPCount + '" type="text" name="LayerIntervalsHydrochemistryCIWP[' + ColorsHydrochemistryCIWPCount + '].Color" value="#ffffff" class="form-control-color" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCIWP[' + ColorsHydrochemistryCIWPCount + '].Color"></span></td><td>' +
            '<input id="ValueInputHydrochemistryCIWP' + ColorsHydrochemistryCIWPCount + '" type="text" name="LayerIntervalsHydrochemistryCIWP[' + ColorsHydrochemistryCIWPCount + '].MinValue" value="" class="form-control" />' +
            '<span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="LayerIntervalsHydrochemistryCIWP[' + ColorsHydrochemistryCIWPCount + '].MinValue"></span></td>' +
            '<td><input type="button" value="@SharedLocalizer["Remove"].ToString()" class="btn btn-default" onclick="RemoveColorHydrochemistryCIWP(' + ColorsHydrochemistryCIWPCount + ')" /></td></tr>'
        $('#ColorsHydrochemistryCIWP > tbody:last-child').append(tr);
        $("#ColorInputHydrochemistryCIWP" + ColorsHydrochemistryCIWPCount).colorpicker({
            strings: $('#ColorPickerString').html()
        });
        ColorsHydrochemistryCIWPCount++;
    };
    function RemoveColorHydrochemistryCIWP(row) {
        $('#ColorInputHydrochemistryCIWP' + row).val('');
        $('#ValueInputHydrochemistryCIWP' + row).val('0');
        $('#ColorHydrochemistryCIWP' + row).hide();
    };

    function AsLakeLayerF() {
        if (document.getElementById('AsLakeLayer').checked) {
            $('.AsLakeLayer').show();
        } else {
            $('.AsLakeLayer').hide();
        }
    };

    $(document).ready(function (e) {
        for (i = 0; i < ColorsWaterLevelCount; i++) {
            $("#ColorInputWaterLevel" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsSurfaceFlowCount; i++) {
            $("#ColorInputSurfaceFlow" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsPrecipitationCount; i++) {
            $("#ColorInputPrecipitation" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsUndergroundFlowCount; i++) {
            $("#ColorInputUndergroundFlow" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsSurfaceOutflowCount; i++) {
            $("#ColorInputSurfaceOutflow" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsEvaporationCount; i++) {
            $("#ColorInputEvaporation" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsUndergroundOutflowCount; i++) {
            $("#ColorInputUndergroundOutflow" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryMineralizationCount; i++) {
            $("#ColorInputHydrochemistryMineralization" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryTotalHardnessCount; i++) {
            $("#ColorInputHydrochemistryTotalHardness" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryDissOxygWaterCount; i++) {
            $("#ColorInputHydrochemistryDissOxygWater" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryPercentOxygWaterCount; i++) {
            $("#ColorInputHydrochemistryPercentOxygWater" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistrypHCount; i++) {
            $("#ColorInputHydrochemistrypH" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryOrganicSubstancesCount; i++) {
            $("#ColorInputHydrochemistryOrganicSubstances" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryCaCount; i++) {
            $("#ColorInputHydrochemistryCa" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryMgCount; i++) {
            $("#ColorInputHydrochemistryMg" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryNaKCount; i++) {
            $("#ColorInputHydrochemistryNaK" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryClCount; i++) {
            $("#ColorInputHydrochemistryCl" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryHCOCount; i++) {
            $("#ColorInputHydrochemistryHCO" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistrySOCount; i++) {
            $("#ColorInputHydrochemistrySO" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryNHCount; i++) {
            $("#ColorInputHydrochemistryNH" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryNO2Count; i++) {
            $("#ColorInputHydrochemistryNO2" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryNO3Count; i++) {
            $("#ColorInputHydrochemistryNO3" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryPPOCount; i++) {
            $("#ColorInputHydrochemistryPPO" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryCuCount; i++) {
            $("#ColorInputHydrochemistryCu" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryZnCount; i++) {
            $("#ColorInputHydrochemistryZn" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryMnCount; i++) {
            $("#ColorInputHydrochemistryMn" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryPbCount; i++) {
            $("#ColorInputHydrochemistryPb" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryNiCount; i++) {
            $("#ColorInputHydrochemistryNi" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryCdCount; i++) {
            $("#ColorInputHydrochemistryCd" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryCoCount; i++) {
            $("#ColorInputHydrochemistryCo" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
        for (i = 0; i < ColorsHydrochemistryCIWPCount; i++) {
            $("#ColorInputHydrochemistryCIWP" + i).colorpicker({
                strings: $('#ColorPickerString').html()
            });
        }
    });
</script>