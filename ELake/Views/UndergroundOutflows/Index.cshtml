@model ELake.Models.UndergroundOutflowIndexPageViewModel
@using ELake.Controllers
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SharedResources> SharedLocalizer
@using System.Net
@{
    ViewData["Title"] = SharedLocalizer["UndergroundOutflows"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css'>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-2 offset-md-1 mt-3">
            <div class="list-group">
                <div class="alert alert-primary" role="alert">
                    <h5 class="alert-heading">Water Tables</h5>
                </div>
                <a class="list-group-item list-group-item-action" asp-controller="WaterLevels" asp-action="Index">@SharedLocalizer["WaterLevels"]</a>
                <a class="list-group-item list-group-item-action" asp-controller="SurfaceFlows" asp-action="Index">@SharedLocalizer["SurfaceFlows"]</a>
                <a class="list-group-item list-group-item-action" asp-controller="Precipitations" asp-action="Index">@SharedLocalizer["Precipitations"]</a>
                <a class="list-group-item list-group-item-action" asp-controller="UndergroundFlows" asp-action="Index">@SharedLocalizer["UndergroundFlows"]</a>
                <a class="list-group-item list-group-item-action" asp-controller="SurfaceOutflows" asp-action="Index">@SharedLocalizer["SurfaceOutflows"]</a>
                <a class="list-group-item list-group-item-action" asp-controller="Evaporations" asp-action="Index">@SharedLocalizer["Evaporations"]</a>
                <a class="list-group-item list-group-item-action active" asp-controller="UndergroundOutflows" asp-action="Index">@SharedLocalizer["UndergroundOutflows"]</a>
                <a class="list-group-item list-group-item-action" asp-controller="Hydrochemistries" asp-action="Index">@SharedLocalizer["Hydrochemistries"]</a>
            </div>
        </div>
        <div class="col-md-8 mt-3">
            <div class="alert alert-primary" role="alert">
                <h4 class="alert-heading">@SharedLocalizer["UndergroundOutflows"]</h4>
                <hr>
                <p class="mb-0">There should be a description or video</p>
            </div>
            <div class="table-responsive-lg">
                @using (Html.BeginForm("Index", "UndergroundOutflows", new { SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter }, FormMethod.Get))
                {
                    @Html.Editor("SortOrder", null, new { htmlAttributes = new { @hidden = "hidden" }, value = ViewBag.SortOrder })
                    @if (Model.Pager.EndPage > 1)
                    {
                        <div class="row no-gutters">
                            <div class="col-12 col-sm-2 col-md-8">
                                <p>
                                    <a class="btn btn-outline-success ml-1" asp-action="Create"><i class="fa fa-pencil"></i> @SharedLocalizer["Create"]</a>
                                </p>
                            </div>
                            <div class="col-6 col-md-4">
                                <ul class="pagination justify-content-end">
                                    @if (Model.Pager.CurrentPage > 1)
                                    {
                                        <li class="page-item page-link">
                                            @Html.ActionLink(WebUtility.HtmlDecode("&laquo;&laquo;"), "Index",
                                                new { SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                        </li>
                                        <li class="page-item page-link">
                                            @Html.ActionLink(WebUtility.HtmlDecode("&laquo;"), "Index",
                                                new { Page = Model.Pager.CurrentPage - 1, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                        </li>
                                    }

                                    @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                                    {

                                        <li class="page-item page-link @(page == Model.Pager.CurrentPage ? "active" : "")" @(page == Model.Pager.CurrentPage ? "style=background-color:#b8daff;" : "")>
                                            @Html.ActionLink(page.ToString(), "Index",
                                                new { Page = page, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                        </li>
                                    }

                                    @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                                    {
                                        <li class="page-item page-link">
                                            @Html.ActionLink(WebUtility.HtmlDecode("&raquo;"), "Index",
                                                new { Page = Model.Pager.CurrentPage + 1, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                        </li>
                                        <li class="page-item page-link">
                                            @Html.ActionLink(WebUtility.HtmlDecode("&raquo;&raquo;"), "Index",
                                                new { Page = Model.Pager.TotalPages, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                        </li>
                                    }
                                </ul>

                            </div>
                        </div>

                    }
                        <table class="table table-bordered table table-sm">
                            <thead>
                                <tr class="table-primary">
                                    <th scope="col">
                                        <div class="form-row align-items-center">
                                            <div class="col-sm-4 my-1">
                                                @Html.Editor("LakeId", null, new { htmlAttributes = new { @class = "form-control is-valid" }, value = "" })
                                            </div>
                                            <div class="col-sm-auto my-1">
                                                @Html.ActionLink(Html.DisplayNameFor(b => b.Items.FirstOrDefault().LakeId).ToString(), "Index",
                                               new { SortOrder = ViewBag.LakeIdSort, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                            </div>
                                        </div>
                                    </th>
                                    <th scope="col">
                                        <div class="form-row align-items-center">
                                            <div class="col-sm-5 my-1">
                                                @Html.Editor("Year", null, new { htmlAttributes = new { @class = "form-control is-valid" }, value = "" })
                                            </div>
                                            <div class="col-sm-auto my-1">
                                                @Html.ActionLink(Html.DisplayNameFor(b => b.Items.FirstOrDefault().Year).ToString(), "Index",
                                               new { SortOrder = ViewBag.YearSort, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                            </div>
                                        </div>
                                    </th>
                                    <th scope="col">
                                        <div class="form-row align-items-center">
                                            <div class="col-auto my-1">
                                                @Html.ActionLink(Html.DisplayNameFor(b => b.Items.FirstOrDefault().Value).ToString(), "Index",
                                               new { SortOrder = ViewBag.ValueSort, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                            </div>
                                        </div>
                                    </th>
                                    <th scope="col">
                                        <div class="form-row align-items-center">
                                            <div class="col-auto my-1">
                                                <input type="submit" value="@SharedLocalizer["Find"]" class="btn btn-outline-primary">
                                            </div>
                                        </div>

                                    </th>
                                </tr>
                            </thead>
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    <th scope="row">@Html.DisplayFor(modelItem => item.LakeId)</th>
                                    <td>@Html.DisplayFor(modelItem => item.Year)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Value)</td>
                                    <td>
                                        <a asp-action="Details" asp-route-id="@item.Id"><i class="icon-sm ion-ios-information"></i></a> |
                                        <a asp-action="Edit" asp-route-id="@item.Id"><i class="icon-sm ion-edit"></i></a> |
                                        <a asp-action="Delete" asp-route-id="@item.Id"><i class="icon-sm ion-android-delete"></i></a>
                                    </td>
                                </tr>
                            }
                        </table>
                    @if (Model.Pager.EndPage > 1)
                    {
                        <ul class="pagination justify-content-end">
                            @if (Model.Pager.CurrentPage > 1)
                            {
                                <li class="page-item page-link">
                                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;&laquo;"), "Index",
                                        new { SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                </li>
                                <li class="page-item page-link">
                                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;"), "Index",
                                        new { Page = Model.Pager.CurrentPage - 1, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                </li>
                            }

                            @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                            {

                                <li class="page-item page-link @(page == Model.Pager.CurrentPage ? "active" : "")" @(page == Model.Pager.CurrentPage ? "style=background-color:#b8daff;" : "")>
                                    @Html.ActionLink(page.ToString(), "Index",
                                        new { Page = page, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                </li>
                            }

                            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                            {
                                <li class="page-item page-link">
                                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;"), "Index",
                                        new { Page = Model.Pager.CurrentPage + 1, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                </li>
                                <li class="page-item page-link">
                                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;&raquo;"), "Index",
                                        new { Page = Model.Pager.TotalPages, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                </li>
                            }
                        </ul>

                    }
                }
            </div>
        </div>
    </div>
</div>
@*<body class="bg-white">
    <div class="container">
        <div class="jumbotron jumbotron-fluid shadow-sm">
            <div class="container py-2">
                <h2 class="pb-3 mb-1 font-italic border-bottom">@SharedLocalizer["UndergroundOutflows"]</h2>
                <div class="d-flex bd-highlight">
                    <div class="p-2 flex-grow-1 bd-highlight">
                        <p class="lead text-info">Description</p>
                    </div>
                    <!-- Button trigger modal -->
                    <div class="bd-highlight">
                        <button type="button" class="btn btn-link" data-toggle="modal" data-target=".bd-example-modal-lg"><i class="icon ion-ios-information-outline"></i></button>
                    </div>
                </div>
                <!-- Modal -->
                <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalCenterTitle">@SharedLocalizer["UndergroundOutflows"]</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                There should be a description or video
                            </div>
                        </div>
                    </div>
                </div>
                <div class="alert-success" role="alert">
                    @ViewData["Message"]
                </div>
                @if (!string.IsNullOrEmpty(ViewBag.Message))
                {
                    <div class="alert-danger" role="alert">
                        @ViewBag.Message
                    </div>
                }
            </div>
        </div>
        @using (Html.BeginForm("Index", "UndergroundOutflows", new { SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter }, FormMethod.Get))
        {
            @Html.Editor("SortOrder", null, new { htmlAttributes = new { @hidden = "hidden" }, value = ViewBag.SortOrder })
            @if (Model.Pager.EndPage > 1)
            {
                <div class="row no-gutters">
                    <div class="col-12 col-sm-2 col-md-8">
                        <p>
                            <a class="btn btn-outline-success ml-1" asp-action="Create"><i class="icon-sm ion-android-create"></i> @SharedLocalizer["Create"]</a>
                        </p>
                    </div>
                    <div class="col-6 col-md-4">
                        <ul class="pagination justify-content-end">
                            @if (Model.Pager.CurrentPage > 1)
                            {
                                <li class="page-item page-link">
                                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;&laquo;"), "Index",
                                        new { SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                </li>
                                <li class="page-item page-link">
                                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;"), "Index",
                                        new { Page = Model.Pager.CurrentPage - 1, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                </li>
                            }

                            @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                            {

                                <li class="page-item page-link @(page == Model.Pager.CurrentPage ? "active" : "")" @(page == Model.Pager.CurrentPage ? "style=background-color:#b8daff;" : "")>
                                    @Html.ActionLink(page.ToString(), "Index",
                                        new { Page = page, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                </li>
                            }

                            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                            {
                                <li class="page-item page-link">
                                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;"), "Index",
                                        new { Page = Model.Pager.CurrentPage + 1, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                </li>
                                <li class="page-item page-link">
                                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;&raquo;"), "Index",
                                        new { Page = Model.Pager.TotalPages, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                </li>
                            }
                        </ul>

                    </div>
                </div>

            }
            <div class="table-responsive-lg">
                <table class="table table-bordered table table-sm">
                    <thead>
                        <tr class="table-primary">
                            <th scope="col">
                                <div class="form-row align-items-center">
                                    <div class="col-sm-4 my-1">
                                        @Html.Editor("LakeId", null, new { htmlAttributes = new { @class = "form-control is-valid" }, value = "" })
                                    </div>
                                    <div class="col-sm-auto my-1">
                                        @Html.ActionLink(Html.DisplayNameFor(b => b.Items.FirstOrDefault().LakeId).ToString(), "Index",
                                       new { SortOrder = ViewBag.LakeIdSort, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                    </div>
                                </div>
                            </th>
                            <th scope="col">
                                <div class="form-row align-items-center">
                                    <div class="col-sm-5 my-1">
                                        @Html.Editor("Year", null, new { htmlAttributes = new { @class = "form-control is-valid" }, value = "" })
                                    </div>
                                    <div class="col-sm-auto my-1">
                                        @Html.ActionLink(Html.DisplayNameFor(b => b.Items.FirstOrDefault().Year).ToString(), "Index",
                                       new { SortOrder = ViewBag.YearSort, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                    </div>
                                </div>
                            </th>
                            <th scope="col">
                                <div class="form-row align-items-center">
                                    <div class="col-auto my-1">
                                        @Html.ActionLink(Html.DisplayNameFor(b => b.Items.FirstOrDefault().Value).ToString(), "Index",
                                       new { SortOrder = ViewBag.ValueSort, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                                    </div>
                                </div>
                            </th>
                            <th scope="col">
                                <div class="form-row align-items-center">
                                    <div class="col-auto my-1">
                                        <input type="submit" value="@SharedLocalizer["Find"]" class="btn btn-outline-primary">
                                    </div>
                                </div>

                            </th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <th scope="row">@Html.DisplayFor(modelItem => item.LakeId)</th>
                            <td>@Html.DisplayFor(modelItem => item.Year)</td>
                            <td>@Html.DisplayFor(modelItem => item.Value)</td>
                            <td>
                                <a asp-action="Details" asp-route-id="@item.Id"><i class="icon-sm ion-ios-information"></i></a> |
                                <a asp-action="Edit" asp-route-id="@item.Id"><i class="icon-sm ion-edit"></i></a> |
                                <a asp-action="Delete" asp-route-id="@item.Id"><i class="icon-sm ion-android-delete"></i></a>
                            </td>
                        </tr>
                    }
                </table>
            </div>
            @if (Model.Pager.EndPage > 1)
            {
                <ul class="pagination justify-content-end">
                    @if (Model.Pager.CurrentPage > 1)
                    {
                        <li class="page-item page-link">
                            @Html.ActionLink(WebUtility.HtmlDecode("&laquo;&laquo;"), "Index",
                                new { SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                        </li>
                        <li class="page-item page-link">
                            @Html.ActionLink(WebUtility.HtmlDecode("&laquo;"), "Index",
                                new { Page = Model.Pager.CurrentPage - 1, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                        </li>
                    }

                    @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                    {

                        <li class="page-item page-link @(page == Model.Pager.CurrentPage ? "active" : "")" @(page == Model.Pager.CurrentPage ? "style=background-color:#b8daff;" : "")>
                            @Html.ActionLink(page.ToString(), "Index",
                                new { Page = page, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                        </li>
                    }

                    @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                    {
                        <li class="page-item page-link">
                            @Html.ActionLink(WebUtility.HtmlDecode("&raquo;"), "Index",
                                new { Page = Model.Pager.CurrentPage + 1, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                        </li>
                        <li class="page-item page-link">
                            @Html.ActionLink(WebUtility.HtmlDecode("&raquo;&raquo;"), "Index",
                                new { Page = Model.Pager.TotalPages, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                        </li>
                    }
                </ul>

            }
        }
    </div>
</body>*@

@*@using (Html.BeginForm("Index", "UndergroundOutflows", new { SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter }, FormMethod.Get))
{
    @Html.Editor("SortOrder", null, new { htmlAttributes = new { @hidden = "hidden" }, value = ViewBag.SortOrder })
    @if (Model.Pager.EndPage > 1)
    {
        <ul class="pagination">
            @if (Model.Pager.CurrentPage > 1)
            {
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;&laquo;"), "Index",
                        new { SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                </li>
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;"), "Index",
                        new { Page = Model.Pager.CurrentPage - 1, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                </li>
            }

            @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                    @Html.ActionLink(page.ToString(), "Index",
                        new { Page = page, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                </li>
            }

            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;"), "Index",
                        new { Page = Model.Pager.CurrentPage + 1, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                </li>
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;&raquo;"), "Index",
                        new { Page = Model.Pager.TotalPages, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                </li>
            }
        </ul>
    }
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(b => b.Items.FirstOrDefault().LakeId).ToString(), "Index",
                        new { SortOrder = ViewBag.LakeIdSort, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                    <br />
                    @Html.Editor("LakeId", null, new { htmlAttributes = new { @class = "form-control" }, value = "" })
                </th>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(b => b.Items.FirstOrDefault().Year).ToString(), "Index",
                        new { SortOrder = ViewBag.YearSort, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                    <br />
                    @Html.Editor("Year", null, new { htmlAttributes = new { @class = "form-control" }, value = "" })
                </th>
                <th>
                    @Html.ActionLink(Html.DisplayNameFor(b => b.Items.FirstOrDefault().Value).ToString(), "Index",
                        new { SortOrder = ViewBag.ValueSort, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                    <br />
                </th>
                <th>
                    <br />
                    <input type="submit" value="@SharedLocalizer["Find"]" class="btn btn-default">
                </th>
            </tr>
        </thead>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LakeId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Year)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">@SharedLocalizer["Edit"]</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">@SharedLocalizer["Details"]</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">@SharedLocalizer["Delete"]</a>
                </td>
            </tr>
        }
    </table>
    @if (Model.Pager.EndPage > 1)
    {
        <ul class="pagination">
            @if (Model.Pager.CurrentPage > 1)
            {
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;&laquo;"), "Index",
                        new { SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                </li>
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&laquo;"), "Index",
                        new { Page = Model.Pager.CurrentPage - 1, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                </li>
            }

            @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                    @Html.ActionLink(page.ToString(), "Index",
                        new { Page = page, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                </li>
            }

            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;"), "Index",
                        new { Page = Model.Pager.CurrentPage + 1, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                </li>
                <li>
                    @Html.ActionLink(WebUtility.HtmlDecode("&raquo;&raquo;"), "Index",
                        new { Page = Model.Pager.TotalPages, SortOrder = ViewBag.SortOrder, LakeId = ViewBag.LakeIdFilter, Year = ViewBag.YearFilter })
                </li>
            }
        </ul>
    }
}*@
