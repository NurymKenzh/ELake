@*@ViewBag.LakesLayer ELake.ViewBag.LakesLayers.Lake*@
@using ELake.Controllers
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SharedResources> SharedLocalizer
@{
    ViewData["Title"] = SharedLocalizer["Lakes"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/lib/jquery/dist/jquery.js"></script>
<link href="~/lib/ol/ol.css" rel="stylesheet" />
<script src="~/lib/ol/ol.js"></script>
<script src="~/lib/chart.js/Chart.js"></script>
<script src="~/lib/gasparesganga-jquery-loading-overlay/src/loadingoverlay.js"></script>

@*<input type="button" name="Text" value="VTest" onclick="Test()" />*@
<div class="container-fluid" id="maindiv">
    <div class="row">
        <div class="col-md-9">
            <div class="d-block border-bottom border-primary p-2" style="background-color: #e3f2fd;">
                <div class="col-md-4 ">
                    <form class="form-inline my-2 my-lg-0">
                        <input id="search" class="form-control form-control-sm mr-sm-2" type="search" placeholder="@SharedLocalizer["Search"]" aria-label="Search" oninput="SearchChange(0);">
                    </form>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body bg-light">
                            <div class="input-group">
                                <select id="LakeId" class="form-control" size="5" onchange="SelectLakeZoom($('#LakeId').val().toString(), true)"></select>
                            </div>
                            <div class="input-group">
                                <select id="adm1" class="form-control" asp-items="ViewBag.Adm1" onchange="GetAmd2(); SearchChange(0);">
                                    <option selected></option>
                                </select>
                            </div>
                            <div class="input-group">
                                <select id="adm2" class="form-control" onchange="SearchChange(0);">
                                    <option selected></option>
                                </select>
                            </div>
                            <div class="input-group">
                                <select id="svhb" class="form-control" asp-items="ViewBag.VHB" onchange="GetVHU(); SearchChange(0);">
                                    <option selected></option>
                                </select>
                            </div>
                            <div class="input-group">
                                <select id="svhu" class="form-control" onchange="SearchChange(0);">
                                    <option selected></option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-body">
                            <div id="map"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class='mtabs mt-1'>
                <input id="tab1" type="radio" name="tabs" checked>
                <label for="tab1">@SharedLocalizer["BasicInfoLake"]</label>
                <input id="tab2" type="radio" name="tabs">
                <label for="tab2">@SharedLocalizer["Hydrology"]</label>
                <input id="tab3" type="radio" name="tabs">
                <label for="tab3">@SharedLocalizer["Hydrochemistries"]</label>
                <input id="tab4" type="radio" name="tabs">
                <label for="tab4">@SharedLocalizer["Hydrobiology"]</label>
                <section id="content1">
                    <article class="card-body">
                        <dl class="row">
                            <dt class="col-sm-5">
                                @SharedLocalizer["Name"]
                            </dt>
                            <dd class="col-sm-7 text-right" id="Name">

                            </dd>
                            <dt class="col-sm-5">
                                @SharedLocalizer["LakeId"]
                            </dt>
                            <dd class="col-sm-7 text-right" id="LakeIdInfo">

                            </dd>
                            <dt class="col-sm-5">
                                @SharedLocalizer["Adm1"]
                            </dt>
                            <dd class="col-sm-7 text-right" id="Adm1">

                            </dd>
                            <dt class="col-sm-5">
                                @SharedLocalizer["Adm2"]
                            </dt>
                            <dd class="col-sm-7 text-right" id="Adm2">

                            </dd>
                            <dt class="col-sm-5">
                                @SharedLocalizer["Longitude"]
                            </dt>
                            <dd class="col-sm-7 text-right" id="Longitude">

                            </dd>
                            <dt class="col-sm-5">
                                @SharedLocalizer["Latitude"]
                            </dt>
                            <dd class="col-sm-7 text-right" id="Latitude">

                            </dd>
                        </dl>
                    </article>
                </section>
                <section id="content2"></section>
                <section id="content3"></section>
                <section id="content4"></section>
            </div>
        </div>
    </div>
</div>
@* hidden *@
<div hidden="hidden">
    <input id="Year" type="hidden" value='@SharedLocalizer["Year"]' />
    <input id="WaterLevelWaterLavelM" type="hidden" value='@SharedLocalizer["WaterLavelM"]' />
    <input id="Value" type="hidden" value='@SharedLocalizer["Value"]' />
    <input id="LakeName" type="hidden" value='@ViewBag.LakeName' />
    <input id="ViewBagLakeId" type="hidden" value='@ViewBag.LakeId' />
</div>
<div id="map"></div>
@* map and layers *@
<script type="text/javascript">
    var layers = [];
    layers.push(new ol.layer.Tile({
        source: new ol.source.OSM()
    }));
    layers[0].set('name', 'OSM');

    var geoserverPort = '8080',
        geoserverAddress = window.location.hostname;

    var Source_Lakes = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?',
        params: {
            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_Lakes = new ol.layer.Tile({
        source: Source_Lakes
    });
    Layer_Lakes.setOpacity(0.80);
    layers.push(Layer_Lakes);

    var Source_Lake = new ol.source.Vector({});
    var Layer_Lake = new ol.layer.Vector({
        source: Source_Lake,
        style: new ol.style.Style({
            fill: new ol.style.Fill({
                color: [0, 0, 255, 0]
            }),
            stroke: new ol.style.Stroke({
                color: 'red',
                width: 2
            })
        })
    });
    layers.push(Layer_Lake);

    var geoserverPort = '8080',
        //geoserverAddress = '82.200.146.116';
        geoserverAddress = 'localhost';

    var map = new ol.Map({
        target: 'map',
        layers: layers,
        view: new ol.View({
            center: ol.proj.fromLonLat([69, 48]),
            zoom: 4
        })
    });

    $("#maindiv").LoadingOverlay("show");

    var Layer_Lakes_v = new ol.layer.Vector({});

    var url_Lakes = "http://" + geoserverAddress + ":" + geoserverPort + "/geoserver/ELake/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=ELake:Lakes&outputFormat=text/javascript&format_options=callback:getJson";
    //$('#TestText').val(url_Lakes);
    $.ajax({
        jsonp: false,
        jsonpCallback: 'getJson',
        type: 'GET',
        url: url_Lakes,
        async: false,
        dataType: 'jsonp',
        success: function (data_Lakes) {
            Layer_Lakes_v = new ol.layer.Vector({
                source: new ol.source.Vector({
                    features: (new ol.format.GeoJSON()).readFeatures(data_Lakes, {
                        featureProjection: 'EPSG:3857'
                    })
                })
            });
            @{
                string LakeId = ViewBag.LakeId?.ToString();
                if(string.IsNullOrEmpty(LakeId))
                {
                    LakeId = "0";
                }
            }
            $("#maindiv").LoadingOverlay("hide");
            SelectLakeZoom(@LakeId, true);
        },
        error: function () {
            $("#maindiv").LoadingOverlay("hide");
            //alert('error');
        }
    });

    

</script>
@* Select lake and zoom to *@
<script>
    function SelectLakeZoom(lakeId_, zoom) {
        var lakeId = parseInt(lakeId_);
        GetLakeInfo(lakeId);
        features = Layer_Lakes_v.getSource().getFeatures();
        for (i = 0; i < features.length; i++) {
            if (features[i].get('id') === lakeId) {
                var polyFeature = new ol.Feature({
                    geometry: new ol.geom.MultiPolygon(features[i].getGeometry().getCoordinates())
                });
                Source_Lake.clear();
                Source_Lake.addFeature(features[i]);
                if (zoom) {
                    map.getView().fit(Layer_Lakes_v.getSource().getExtent(), { duration: 1500 });
                    setTimeout(ZoomToFeature, 1500, polyFeature);
                }
            }
        }
    }

    function ZoomToFeature(polyFeature) {
        var extent = polyFeature.getGeometry().getExtent();
        map.getView().fit(extent, {
            duration: 1500
        });
    }
</script>
@* Get lake info *@
<script>
    function GetLakeInfo(LakeId) {
        $.ajax({
            url: '@Url.Action("GetLakeInfo")',
            data: { LakeId: LakeId },
            type: 'POST',
            success: function (data) {
                // Основная информация об озере
                $('#Name').text(data.name);
                if (LakeId != 0) {
                    $('#LakeIdInfo').html(LakeId);
                }
                $('#Adm1').text(data.adm1);
                $('#Adm2').text(data.adm2);
                $('#Longitude').text(data.longitude);
                $('#Latitude').text(data.latitude);
                $('#Adm3').text(data.adm3);

                //ChartWaterLevels(data.waterlevelsyears, data.waterlevelsm);
                //TableWaterLevels(data.waterlevelsyears, data.waterlevelsm);
                //ChartSurfaceFlows(data.surfaceflowsyears, data.surfaceflowsvalues);
                //TableSurfaceFlows(data.surfaceflowsyears, data.surfaceflowsvalues);
                //ChartPrecipitations(data.precipitationsyears, data.precipitationsvalues);
                //TablePrecipitations(data.precipitationsyears, data.precipitationsvalues);
                //ChartUndergroundFlows(data.undergroundflowsyears, data.undergroundflowsvalues);
                //TableUndergroundFlows(data.undergroundflowsyears, data.undergroundflowsvalues);
                //ChartSurfaceOutflows(data.surfaceoutflowsyears, data.surfaceoutflowsvalues);
                //TableSurfaceOutflows(data.surfaceoutflowsyears, data.surfaceoutflowsvalues);
                //ChartEvaporations(data.evaporationsyears, data.evaporationsvalues);
                //TableEvaporations(data.evaporationsyears, data.evaporationsvalues);
                //ChartUndergroundOutflows(data.undergroundoutflowsyears, data.undergroundoutflowsvalues);
                //TableUndergroundOutflows(data.undergroundoutflowsyears, data.undergroundoutflowsvalues);
            },
            error: function () {
            }
        });
    }

    var ChartWaterLevel = null;
    function ChartWaterLevels(waterlevelsyears, waterlevelsm) {
        var ctx = document.getElementById("ChartWaterLevel").getContext('2d');
        ChartWaterLevel = new Chart(ctx, {
            type: 'line',
            data: {
                labels: waterlevelsyears,//[1, 17, 33, 49, 65, 81],
                datasets: [{
                    label: $('#WaterLevelWaterLavelM').val(),
                    data: waterlevelsm,//[12, 19, 3, 5, 2, 3],
                    backgroundColor: 'rgba(255,99,132,1)',
                    borderColor: 'rgba(255,99,132,1)',
                    borderWidth: 1,
                    fill: false
                }
                ]
            }
        });
    }
    function TableWaterLevels(waterlevelsyears, waterlevelsm) {
        var tablebody = $('#tablebodyWaterLevel');
        var th = $('<th/>').appendTo(tablebody);
        th.append('<td>' + $('#Year').val() + '</td>');
        th.append('<td>' + $('#WaterLevelWaterLavelM').val() + '</td>');
        for (var i = 0; i < waterlevelsyears.length; i++) {
            var tr = $('<tr/>').appendTo(tablebody);
            tr.append('<td>' + waterlevelsyears[i] + '</td>');
            tr.append('<td>' + waterlevelsm[i] + '</td>');
        }
    }
    var ChartSurfaceFlow = null;
    function ChartSurfaceFlows(surfaceflowsyears, surfaceflowsvalues) {
        var ctx = document.getElementById("ChartSurfaceFlow").getContext('2d');
        ChartSurfaceFlow = new Chart(ctx, {
            type: 'line',
            data: {
                labels: surfaceflowsyears,//[1, 17, 33, 49, 65, 81],
                datasets: [{
                    label: $('#Value').val(),
                    data: surfaceflowsvalues,//[12, 19, 3, 5, 2, 3],
                    backgroundColor: 'rgba(255,99,132,1)',
                    borderColor: 'rgba(255,99,132,1)',
                    borderWidth: 1,
                    fill: false
                }
                ]
            }
        });
    }
    function TableSurfaceFlows(surfaceflowsyears, surfaceflowsvalues) {
        var tablebody = $('#tablebodySurfaceFlow');
        var th = $('<th/>').appendTo(tablebody);
        th.append('<td>' + $('#Year').val() + '</td>');
        th.append('<td>' + $('#Value').val() + '</td>');
        for (var i = 0; i < surfaceflowsyears.length; i++) {
            var tr = $('<tr/>').appendTo(tablebody);
            tr.append('<td>' + surfaceflowsyears[i] + '</td>');
            tr.append('<td>' + surfaceflowsvalues[i] + '</td>');
        }
    }
    var ChartPrecipitation = null;
    function ChartPrecipitations(precipitationsyears, precipitationsvalues) {
        var ctx = document.getElementById("ChartPrecipitation").getContext('2d');
        ChartPrecipitation = new Chart(ctx, {
            type: 'line',
            data: {
                labels: precipitationsyears,//[1, 17, 33, 49, 65, 81],
                datasets: [{
                    label: $('#Value').val(),
                    data: precipitationsvalues,//[12, 19, 3, 5, 2, 3],
                    backgroundColor: 'rgba(255,99,132,1)',
                    borderColor: 'rgba(255,99,132,1)',
                    borderWidth: 1,
                    fill: false
                }
                ]
            }
        });
    }
    function TablePrecipitations(precipitationsyears, precipitationsvalues) {
        var tablebody = $('#tablebodyPrecipitation');
        var th = $('<th/>').appendTo(tablebody);
        th.append('<td>' + $('#Year').val() + '</td>');
        th.append('<td>' + $('#Value').val() + '</td>');
        for (var i = 0; i < precipitationsyears.length; i++) {
            var tr = $('<tr/>').appendTo(tablebody);
            tr.append('<td>' + precipitationsyears[i] + '</td>');
            tr.append('<td>' + precipitationsvalues[i] + '</td>');
        }
    }
    var ChartUndergroundFlow = null;
    function ChartUndergroundFlows(undergroundflowsyears, undergroundflowsvalues) {
        var ctx = document.getElementById("ChartUndergroundFlow").getContext('2d');
        ChartUndergroundFlow = new Chart(ctx, {
            type: 'line',
            data: {
                labels: undergroundflowsyears,//[1, 17, 33, 49, 65, 81],
                datasets: [{
                    label: $('#Value').val(),
                    data: undergroundflowsvalues,//[12, 19, 3, 5, 2, 3],
                    backgroundColor: 'rgba(255,99,132,1)',
                    borderColor: 'rgba(255,99,132,1)',
                    borderWidth: 1,
                    fill: false
                }
                ]
            }
        });
    }
    function TableUndergroundFlows(undergroundflowsyears, undergroundflowsvalues) {
        var tablebody = $('#tablebodyUndergroundFlow');
        var th = $('<th/>').appendTo(tablebody);
        th.append('<td>' + $('#Year').val() + '</td>');
        th.append('<td>' + $('#Value').val() + '</td>');
        for (var i = 0; i < undergroundflowsyears.length; i++) {
            var tr = $('<tr/>').appendTo(tablebody);
            tr.append('<td>' + undergroundflowsyears[i] + '</td>');
            tr.append('<td>' + undergroundflowsvalues[i] + '</td>');
        }
    }
    var ChartSurfaceOutflow = null;
    function ChartSurfaceOutflows(surfaceoutflowsyears, surfaceoutflowsvalues) {
        var ctx = document.getElementById("ChartSurfaceOutflow").getContext('2d');
        ChartSurfaceOutflow = new Chart(ctx, {
            type: 'line',
            data: {
                labels: surfaceoutflowsyears,//[1, 17, 33, 49, 65, 81],
                datasets: [{
                    label: $('#Value').val(),
                    data: surfaceoutflowsvalues,//[12, 19, 3, 5, 2, 3],
                    backgroundColor: 'rgba(255,99,132,1)',
                    borderColor: 'rgba(255,99,132,1)',
                    borderWidth: 1,
                    fill: false
                }
                ]
            }
        });
    }
    function TableSurfaceOutflows(surfaceoutflowsyears, surfaceoutflowsvalues) {
        var tablebody = $('#tablebodySurfaceOutflow');
        var th = $('<th/>').appendTo(tablebody);
        th.append('<td>' + $('#Year').val() + '</td>');
        th.append('<td>' + $('#Value').val() + '</td>');
        for (var i = 0; i < surfaceoutflowsyears.length; i++) {
            var tr = $('<tr/>').appendTo(tablebody);
            tr.append('<td>' + surfaceoutflowsyears[i] + '</td>');
            tr.append('<td>' + surfaceoutflowsvalues[i] + '</td>');
        }
    }
    var ChartEvaporation = null;
    function ChartEvaporations(evaporationsyears, evaporationsvalues) {
        var ctx = document.getElementById("ChartEvaporation").getContext('2d');
        ChartEvaporation = new Chart(ctx, {
            type: 'line',
            data: {
                labels: evaporationsyears,//[1, 17, 33, 49, 65, 81],
                datasets: [{
                    label: $('#Value').val(),
                    data: evaporationsvalues,//[12, 19, 3, 5, 2, 3],
                    backgroundColor: 'rgba(255,99,132,1)',
                    borderColor: 'rgba(255,99,132,1)',
                    borderWidth: 1,
                    fill: false
                }
                ]
            }
        });
    }
    function TableEvaporations(evaporationsyears, evaporationsvalues) {
        var tablebody = $('#tablebodyEvaporation');
        var th = $('<th/>').appendTo(tablebody);
        th.append('<td>' + $('#Year').val() + '</td>');
        th.append('<td>' + $('#Value').val() + '</td>');
        for (var i = 0; i < evaporationsyears.length; i++) {
            var tr = $('<tr/>').appendTo(tablebody);
            tr.append('<td>' + evaporationsyears[i] + '</td>');
            tr.append('<td>' + evaporationsvalues[i] + '</td>');
        }
    }
    var ChartUndergroundOutflow = null;
    function ChartUndergroundOutflows(undergroundoutflowsyears, undergroundoutflowsvalues) {
        var ctx = document.getElementById("ChartUndergroundOutflow").getContext('2d');
        ChartUndergroundOutflow = new Chart(ctx, {
            type: 'line',
            data: {
                labels: undergroundoutflowsyears,//[1, 17, 33, 49, 65, 81],
                datasets: [{
                    label: $('#Value').val(),
                    data: undergroundoutflowsvalues,//[12, 19, 3, 5, 2, 3],
                    backgroundColor: 'rgba(255,99,132,1)',
                    borderColor: 'rgba(255,99,132,1)',
                    borderWidth: 1,
                    fill: false
                }
                ]
            }
        });
    }
    function TableUndergroundOutflows(undergroundoutflowsyears, undergroundoutflowsvalues) {
        var tablebody = $('#tablebodyUndergroundOutflow');
        var th = $('<th/>').appendTo(tablebody);
        th.append('<td>' + $('#Year').val() + '</td>');
        th.append('<td>' + $('#Value').val() + '</td>');
        for (var i = 0; i < undergroundoutflowsyears.length; i++) {
            var tr = $('<tr/>').appendTo(tablebody);
            tr.append('<td>' + undergroundoutflowsyears[i] + '</td>');
            tr.append('<td>' + undergroundoutflowsvalues[i] + '</td>');
        }
    }
</script>
@* ChangeDataType, SlideYear, ChangeYear *@
<script>
    function SlideYear(year) {
        $('#year').html(year);
    };

    function ChangeDataType() {
        var year = $('#Year').val();
        if ($('#DataType').val() == "WaterLevels") {
            $.ajax({
                url: '@Url.Action("GetWaterLevelsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.WaterLevel').show();
        }
        else if ($('#DataType').val() == "SurfaceFlows") {
            $.ajax({
                url: '@Url.Action("GetSurfaceFlowsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.SurfaceFlow').show();
        }
        else if ($('#DataType').val() == "Precipitations") {
            $.ajax({
                url: '@Url.Action("GetPrecipitationsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.Precipitation').show();
        }
        else if ($('#DataType').val() == "UndergroundFlows") {
            $.ajax({
                url: '@Url.Action("GetUndergroundFlowsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.UndergroundFlow').show();
        }
        else if ($('#DataType').val() == "SurfaceOutflows") {
            $.ajax({
                url: '@Url.Action("GetSurfaceOutflowsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.SurfaceOutflow').show();
        }
        else if ($('#DataType').val() == "Evaporations") {
            $.ajax({
                url: '@Url.Action("GetEvaporationsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.Evaporation').show();
        }
        else if ($('#DataType').val() == "UndergroundOutflows") {
            $.ajax({
                url: '@Url.Action("GetUndergroundOutflowsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.UndergroundOutflow').show();
        }
        else if ($('#DataType').val() == "HydrochemistryMineralizations") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryMineralizationsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryMineralization').show();
        }
        else if ($('#DataType').val() == "HydrochemistryTotalHardnesss") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryTotalHardnesssStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryTotalHardness').show();
        }
        else if ($('#DataType').val() == "HydrochemistryDissOxygWaters") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryDissOxygWatersStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryDissOxygWater').show();
        }
        else if ($('#DataType').val() == "HydrochemistryPercentOxygWaters") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryPercentOxygWatersStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryPercentOxygWater').show();
        }
        else if ($('#DataType').val() == "HydrochemistrypHs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistrypHsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistrypH').show();
        }
        else if ($('#DataType').val() == "HydrochemistryOrganicSubstancess") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryOrganicSubstancessStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryOrganicSubstances').show();
        }
        else if ($('#DataType').val() == "HydrochemistryCas") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryCasStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryCa').show();
        }
        else if ($('#DataType').val() == "HydrochemistryMgs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryMgsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryMg').show();
        }
        else if ($('#DataType').val() == "HydrochemistryNaKs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryNaKsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryNaK').show();
        }
        else if ($('#DataType').val() == "HydrochemistryCls") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryClsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryCl').show();
        }
        else if ($('#DataType').val() == "HydrochemistryHCOs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryHCOsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryHCO').show();
        }
        else if ($('#DataType').val() == "HydrochemistrySOs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistrySOsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistrySO').show();
        }
        else if ($('#DataType').val() == "HydrochemistryNHs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryNHsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.WaterLevel').show();
        }
        else if ($('#DataType').val() == "HydrochemistryNO2s") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryNO2sStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryNO2').show();
        }
        else if ($('#DataType').val() == "HydrochemistryNO3s") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryNO3sStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryNO3').show();
        }
        else if ($('#DataType').val() == "HydrochemistryPPOs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryPPOsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryPPO').show();
        }
        else if ($('#DataType').val() == "HydrochemistryCus") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryCusStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryCu').show();
        }
        else if ($('#DataType').val() == "HydrochemistryZns") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryZnsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryZn').show();
        }
        else if ($('#DataType').val() == "HydrochemistryMns") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryMnsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryMn').show();
        }
        else if ($('#DataType').val() == "HydrochemistryPbs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryPbsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryPb').show();
        }
        else if ($('#DataType').val() == "HydrochemistryNis") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryNisStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryNi').show();
        }
        else if ($('#DataType').val() == "HydrochemistryCds") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryCdsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryCd').show();
        }
        else if ($('#DataType').val() == "HydrochemistryCos") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryCosStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryCo').show();
        }
        else if ($('#DataType').val() == "HydrochemistryCIWPs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryCIWPsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryCIWP').show();
        }
    };
</script>
@*Map onclick*@
<script>
    map.on('singleclick', function (evt) {
        Source_Lake.clear();
        var viewResolution = (map.getView().getResolution());
        var url = Source_Lakes.getGetFeatureInfoUrl(
            evt.coordinate, viewResolution, 'EPSG:3857',
            {
                'INFO_FORMAT': 'text/javascript'
                //'FEATURE_COUNT': '10000'
            });
        if (url) {
            var parser = new ol.format.GeoJSON();
            $.ajax({
                jsonp: false,
                jsonpCallback: 'getJson',
                type: 'GET',
                url: url + "&format_options=callback:getJson",
                async: false,
                dataType: 'jsonp',
                //jsonpCallback: 'parseResponse',
                error: function (xhr, status, error) {

                }
            }).then(function (response) {
                var result = parser.readFeatures(response);
                if (result.length > 0) {
                    SelectLakeZoom(result[0].get('id'), false);
                }
            })
        }
    })
</script>
@* SearchChange, GetAdm2 *@
<script>
    // select - выбранный на главной странице
    function SearchChange(select) {
        $("#LakeId").LoadingOverlay("show");
        $.ajax({
            url: '@Url.Action("GetLakes")',
            data: {
                Search: $('#search').val(),
                Adm1KATOId: $('#adm1').val(),
                Adm2KATOId: $('#adm2').val(),
                VHB: $('#svhb').val(),
                VHU: $('#svhu').val()
            },
            type: 'POST',
            success: function (data) {
                var $dropdown = $("#LakeId");
                $dropdown.find('option')
                    .remove();
                $.each(data.lakes, function () {
                    $dropdown.append($("<option />").val(this.lakeId).text(this.name));
                });
                if (select > 0) {
                    $("#LakeId").val(select);
                }
                $("#LakeId").LoadingOverlay("hide");
            },
            error: function () {
                $("#LakeId").LoadingOverlay("hide");
            }
        });
    }

    function GetAmd2() {
        var $dropdown = $("#adm2");
        $dropdown.find('option')
            .remove();
        $.ajax({
            url: '@Url.Action("GetAdm2")',
            data: {
                Adm1KATOId: $('#adm1').val()
            },
            type: 'POST',
            success: function (data) {
                
                $dropdown.append($("<option />"));
                $.each(data.adm2, function () {
                    $dropdown.append($("<option />").val(this.id).text(this.name));
                });
            },
            error: function () {
            }
        });
    }

    function GetVHU() {
        var $dropdown = $("#svhu");
        $dropdown.find('option')
            .remove();
        $.ajax({
            url: '@Url.Action("GetVHU")',
            data: {
                VHB: $('#svhb').val()
            },
            type: 'POST',
            success: function (data) {
                
                $dropdown.append($("<option />"));
                $.each(data.vhu, function () {
                    $dropdown.append($("<option />").val(this).text(this));
                });
            },
            error: function () {
            }
        });
    }
</script>
@* $(document).ready(function () {}) *@
<script>
    //function Test() {
    //    //alert($("#ViewBagLakeId").val());
    //    $("#LakeId").val("403810");
    //}

    $(document).ready(function () {
        ChangeDataType();
        $('#search').val($('#LakeName').val());
        if ($('#ViewBagLakeId').val() != '') {
            SearchChange($('#ViewBagLakeId').val());
        }
        else {
            SearchChange(0);
        }
    });
</script>