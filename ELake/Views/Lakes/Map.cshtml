@*@ViewBag.LakesLayer ELake.ViewBag.LakesLayers.Lake*@
@using ELake.Controllers
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SharedResources> SharedLocalizer
@{
    ViewData["Title"] = SharedLocalizer["Lakes"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/lib/jquery/dist/jquery.js"></script>
<link href="~/lib/ol/ol.css" rel="stylesheet" />
<script src="~/lib/ol/ol.js"></script>
<script src="~/lib/chart.js/Chart.js"></script>
<script src="~/lib/gasparesganga-jquery-loading-overlay/src/loadingoverlay.js"></script>

@*<input type="button" name="Text" value="VTest" onclick="Test()" />*@
<div class="container-fluid" id="maindiv">
    <div class="row">
        <div class="col-md-9">
            <div class="d-block border-bottom border-primary p-2" style="background-color: #e3f2fd;">
                <div class="col-md-4 ">
                    <form class="form-inline my-2 my-lg-0">
                        <input id="search" class="form-control form-control-sm mr-sm-2" type="search" placeholder="@SharedLocalizer["Search"]" aria-label="Search" oninput="GetAdm1(); GetAdm2(); GetVHB(); GetVHU(); GetSystem(); SearchChange(0);">
                        <input type="button" class="form-control form-control-sm mr-sm-2" value="@SharedLocalizer["Reset"]" onclick="ResetSearch()"/>
                    </form>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body bg-light">
                            <div class="input-group">
                                <label id="foundLakes">@SharedLocalizer["Found"]:</label>
                            </div>
                            <div class="input-group">
                                <select id="LakeId" class="form-control" size="5" onchange="GetLakeGroup(); SelectLakeZoom($('#LakeId').val().toString(), true)"></select>
                                <select id="LakeGroup" class="form-control" size="5" onchange="SelectLakeZoom($('#LakeGroup').val().toString(), true)" ></select>
                            </div>
                            <div class='mtabs mt-1'>
                                <input id="filtertab1" type="radio" name="filtertabs" value="filterKATO" onchange="SearchChange(0);" checked>
                                <label for="filtertab1">@SharedLocalizer["FilterKATO"]</label>
                                <input id="filtertab2" type="radio" name="filtertabs" value="filterVHBVHU" onchange="SearchChange(0);">
                                <label for="filtertab2">@SharedLocalizer["FilterVHBVHU"]</label>
                                <input id="filtertab3" type="radio" name="filtertabs" value="filterSystem" onchange="SearchChange(0);">
                                <label for="filtertab3">@SharedLocalizer["LakeSystem"]</label>
                                <section id="filtercontent1">
                                    <div class="input-group">
                                        <select id="adm1" class="form-control" asp-items="ViewBag.Adm1" onchange="GetAdm2(); SearchChange(0);">
                                            <option selected></option>
                                        </select>
                                    </div>
                                    <div class="input-group">
                                        <select id="adm2" class="form-control" onchange="SearchChange(0);">
                                            <option selected></option>
                                        </select>
                                    </div>
                                </section>
                                <section id="filtercontent2">
                                    <div class="input-group">
                                        <select id="svhb" class="form-control" asp-items="ViewBag.VHB" onchange="GetVHU(); SearchChange(0);">
                                            <option selected></option>
                                        </select>
                                    </div>
                                    <div class="input-group">
                                        <select id="svhu" class="form-control" onchange="SearchChange(0);">
                                            <option selected></option>
                                        </select>
                                    </div>
                                </section>
                                <section id="filtercontent3">
                                    <div class="input-group">
                                        <select id="ssystem" class="form-control" asp-items="ViewBag.System" onchange="SearchChange(0);">
                                            <option selected></option>
                                        </select>
                                    </div>
                                </section>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-body">
                            <div id="map"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class='mtabs mt-1'>
                <input id="tab1" type="radio" name="tabs" checked>
                <label for="tab1">@SharedLocalizer["BasicInfoLake"]</label>
                <input id="tab2" type="radio" name="tabs">
                <label for="tab2">@SharedLocalizer["Hydrology"]</label>
                <input id="tab3" type="radio" name="tabs">
                <label for="tab3">@SharedLocalizer["Hydrochemistries"]</label>
                <input id="tab4" type="radio" name="tabs">
                <label for="tab4">@SharedLocalizer["Hydrobiology"]</label>
                <section id="content1">
                    <dl class="row">
                        <dt class="col-sm-5">
                            @SharedLocalizer["Name"]
                        </dt>
                        <dd class="col-sm-7 text-right" id="Name"></dd>
                        <dt class="col-sm-5">
                            @SharedLocalizer["LakeId"]
                        </dt>
                        <dd class="col-sm-7 text-right" id="LakeIdInfo"></dd>
                        <dt class="col-sm-5">
                            @SharedLocalizer["Adm1"]
                        </dt>
                        <dd class="col-sm-7 text-right" id="Adm1"></dd>
                        <dt class="col-sm-5">
                            @SharedLocalizer["Adm2"]
                        </dt>
                        <dd class="col-sm-7 text-right" id="Adm2"></dd>
                        <dt class="col-sm-5">
                            @SharedLocalizer["Longitude"]
                        </dt>
                        <dd class="col-sm-7 text-right" id="Longitude"></dd>
                        <dt class="col-sm-5">
                            @SharedLocalizer["Latitude"]
                        </dt>
                        <dd class="col-sm-7 text-right" id="Latitude"></dd>
                    </dl>
                </section>
                <section id="content2"></section>
                <section id="content3">
                    <input id="tabghi1" type="radio" name="ghi" checked>
                    <label for="tabghi1">@SharedLocalizer["GeneralHydrochemicalIndicators"]</label>
                    <input id="tabghi2" type="radio" name="ghi">
                    <label for="tabghi2">@SharedLocalizer["IonsaltWaterCompositions"]</label>
                    <input id="tabghi3" type="radio" name="ghi">
                    <label for="tabghi3">@SharedLocalizer["ToxicologicalIndicators"]</label>
                    <section id="contentghi1">
                        <h3>@SharedLocalizer["GeneralHydrochemicalIndicators"]</h3>
                        <h4 class="LakePart">@SharedLocalizer[LakePart.FreshPart.ToString()]</h4>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>
                                        @SharedLocalizer["Indicator"]
                                    </th>
                                    <th>
                                        @SharedLocalizer["Year"]
                                    </th>
                                    <th>
                                        @SharedLocalizer["Value"]
                                    </th>
                                    <th>
                                        @SharedLocalizer["QualitativeAssessment"]
                                    </th>
                                    <th>
                                        @SharedLocalizer["QualitativeAssessment"]
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        @SharedLocalizer["Mineralization"]
                                    </td>
                                    <td id="GHIYear1"></td>
                                    <td id="Mineralization1"></td>
                                    <td id="MineralizationType1"></td>
                                    <td>
                                        <p onclick="ShowTableMineralization1()" class="link">
                                            <font size="2" color="blue">
                                                @SharedLocalizer["Table"]
                                            </font>
                                        </p>
                                        <p onclick="ShowChartMineralization1()" class="link">
                                            <font size="2" color="blue">
                                                @SharedLocalizer["Chart"]
                                            </font>
                                        </p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <h4 class="LakePart">@SharedLocalizer[LakePart.SaltyPart.ToString()]</h4>
                        <table class="LakePart table">
                            <thead>
                                <tr>
                                    <th>
                                        @SharedLocalizer["Indicator"]
                                    </th>
                                    <th>
                                        @SharedLocalizer["Year"]
                                    </th>
                                    <th>
                                        @SharedLocalizer["Value"]
                                    </th>
                                    <th>
                                        @SharedLocalizer["QualitativeAssessment"]
                                    </th>
                                    <th>
                                        @SharedLocalizer["QualitativeAssessment"]
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        @SharedLocalizer["Mineralization"]
                                    </td>
                                    <td id="GHIYear2"></td>
                                    <td id="Mineralization2"></td>
                                    <td id="MineralizationType2"></td>
                                    <td>
                                        <p onclick="ShowTableMineralization2()" class="link">
                                            <font size="2" color="blue">
                                                @SharedLocalizer["Table"]
                                            </font>
                                        </p>
                                        <p onclick="ShowChartMineralization2()" class="link">
                                            <font size="2" color="blue">
                                                @SharedLocalizer["Chart"]
                                            </font>
                                        </p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        @* Tables, charts *@
                        <h4 class="LakePart">@SharedLocalizer[LakePart.FreshPart.ToString()]</h4>
                        <table id="tableMineralization1" class="GHI table">
                            <thead>
                                <tr>
                                    <th>
                                        @SharedLocalizer["Year"]
                                    </th>
                                    <th>
                                        @SharedLocalizer["Mineralization"]
                                    </th>
                                    <th>
                                        @SharedLocalizer["MineralizationType"]
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="tablebodyMineralization1"></tbody>
                        </table>
                        <canvas id="chartMineralization1" class="GHI" width="400" height="200"></canvas>
                        <h4 class="LakePart">@SharedLocalizer[LakePart.SaltyPart.ToString()]</h4>
                        <table id="tableMineralization2" class="GHI table">
                            <thead>
                                <tr>
                                    <th>
                                        @SharedLocalizer["Year"]
                                    </th>
                                    <th>
                                        @SharedLocalizer["Mineralization"]
                                    </th>
                                    <th>
                                        @SharedLocalizer["MineralizationType"]
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="tablebodyMineralization2"></tbody>
                        </table>
                        <canvas id="chartMineralization2" class="GHI" width="400" height="200"></canvas>
                    </section>
                    <section id="contentghi2"></section>
                    <section id="contentghi3"></section>
                </section>
                <section id="content4"></section>
            </div>
        </div>
    </div>
</div>
@* hidden *@
<div hidden="hidden">
    <input id="Year" type="hidden" value='@SharedLocalizer["Year"]' />
    <input id="WaterLevelWaterLavelM" type="hidden" value='@SharedLocalizer["WaterLavelM"]' />
    <input id="Value" type="hidden" value='@SharedLocalizer["Value"]' />
    <input id="LakeName" type="hidden" value='@ViewBag.LakeName' />
    <input id="ViewBagLakeId" type="hidden" value='@ViewBag.LakeId' />
    <input id="Found" type="hidden" value='@SharedLocalizer["Found"]' />
    <input id="Mineralization" type="hidden" value='@SharedLocalizer["Mineralization"]' />
    <input id="MineralizationType" type="hidden" value='@SharedLocalizer["MineralizationType"]' />
</div>
<div id="map"></div>
@* map and layers *@
<script type="text/javascript">
    var layers = [];
    layers.push(new ol.layer.Tile({
        source: new ol.source.OSM()
    }));
    layers[0].set('name', 'OSM');

    var geoserverPort = '8080',
        geoserverAddress = window.location.hostname;

    var Source_Lakes = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?',
        params: {
            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
            'VERSION': '1.1.0',
            'FORMAT': 'image/png',
            'TILED': true
        },
        serverType: 'geoserver'
    });
    var Layer_Lakes = new ol.layer.Tile({
        source: Source_Lakes
    });
    Layer_Lakes.setOpacity(0.80);
    layers.push(Layer_Lakes);

    var Source_Lake = new ol.source.Vector({});
    var Layer_Lake = new ol.layer.Vector({
        source: Source_Lake,
        style: new ol.style.Style({
            fill: new ol.style.Fill({
                color: [0, 0, 255, 0]
            }),
            stroke: new ol.style.Stroke({
                color: 'red',
                width: 2
            })
        })
    });
    layers.push(Layer_Lake);

    var geoserverPort = '8080',
        //geoserverAddress = '82.200.146.116';
        geoserverAddress = 'localhost';

    var map = new ol.Map({
        target: 'map',
        layers: layers,
        view: new ol.View({
            center: ol.proj.fromLonLat([69, 48]),
            zoom: 4,
            minZoom: 4,
            extent: [6000000, 4856683, 9000000, 7540509]
            //extent: [5917358, 5150581, 9579862, 7210174]
            //extent: [5061645, 4856683, 9834201, 7540509]
        })
    });

    $("#maindiv").LoadingOverlay("show");

    var Layer_Lakes_v = new ol.layer.Vector({});

    var url_Lakes = "http://" + geoserverAddress + ":" + geoserverPort + "/geoserver/ELake/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=ELake:Lakes&outputFormat=text/javascript&format_options=callback:getJson";
    //$('#TestText').val(url_Lakes);
    $.ajax({
        jsonp: false,
        jsonpCallback: 'getJson',
        type: 'GET',
        url: url_Lakes,
        async: false,
        dataType: 'jsonp',
        success: function (data_Lakes) {
            Layer_Lakes_v = new ol.layer.Vector({
                source: new ol.source.Vector({
                    features: (new ol.format.GeoJSON()).readFeatures(data_Lakes, {
                        featureProjection: 'EPSG:3857'
                    })
                })
            });
            @{
                string LakeId = ViewBag.LakeId?.ToString();
                if(string.IsNullOrEmpty(LakeId))
                {
                    LakeId = "0";
                }
            }
            $("#maindiv").LoadingOverlay("hide");
            SelectLakeZoom(@LakeId, true);
        },
        error: function () {
            $("#maindiv").LoadingOverlay("hide");
            //alert('error');
        }
    });

    

</script>
@* Select lake and zoom to *@
<script>
    function SelectLakeZoom(lakeId_, zoom) {
        var lakeId = parseInt(lakeId_);
        GetLakeInfo(lakeId);
        features = Layer_Lakes_v.getSource().getFeatures();
        for (i = 0; i < features.length; i++) {
            if (features[i].get('id') === lakeId) {
                var polyFeature = new ol.Feature({
                    geometry: new ol.geom.MultiPolygon(features[i].getGeometry().getCoordinates())
                });
                Source_Lake.clear();
                Source_Lake.addFeature(features[i]);
                if (zoom) {
                    map.getView().fit(Layer_Lakes_v.getSource().getExtent(), { duration: 1500 });
                    setTimeout(ZoomToFeature, 1500, polyFeature);
                }
            }
        }
    }

    function ZoomToFeature(polyFeature) {
        var extent = polyFeature.getGeometry().getExtent();
        map.getView().fit(extent, {
            duration: 1500
        });
    }

    function GetLakeGroup() {
        var lakeId_ = $('#LakeId').val();
        if ((lakeId_ != null) && (lakeId_ != '') && (lakeId_[lakeId_.length - 1] != '0')) {
            $.ajax({
                url: '@Url.Action("GetLakeGroup")',
                data: {
                    LakeId: lakeId_
                },
                type: 'POST',
                success: function (data) {
                    var $dropdown = $("#LakeGroup");
                    if (data.lakes.length > 0) {
                        $dropdown.show();
                    }
                    else {
                        $dropdown.hide();
                    }
                    $dropdown.find('option')
                        .remove();
                    $.each(data.lakes, function () {
                        $dropdown.append($("<option />").val(this.lakeId).text(this.name));
                    });
                },
                error: function () {
                }
            });
        }
        else {
            $("#LakeGroup").hide();
        }
    }
</script>
@* Get lake info *@
<script>
    function GetLakeInfo(LakeId) {
        $.ajax({
            url: '@Url.Action("GetLakeInfo")',
            data: { LakeId: LakeId },
            type: 'POST',
            success: function (data) {
                // Основная информация об озере
                $('#Name').text(data.name);
                if (LakeId != 0) {
                    $('#LakeIdInfo').html(LakeId);
                }
                $('#Adm1').text(data.adm1);
                $('#Adm2').text(data.adm2);
                $('#Longitude').text(data.longitude);
                $('#Latitude').text(data.latitude);
                $('#Adm3').text(data.adm3);
                // Общие гидрохимические показатели
                if (data.ghi1) {
                    $('#GHIYear1').text(data.ghi1.year);
                    $('#Mineralization1').text(data.ghi1.mineralization);
                    $('#MineralizationType1').text(data.ghi1.mineralizationType);
                }
                if (data.ghi2) {
                    $('#GHIYear2').text(data.ghi2.year);
                    $('#Mineralization2').text(data.ghi2.mineralization);
                    $('#MineralizationType2').text(data.ghi1.mineralizationType);
                }
                TableMineralization(data);
                ChartMineralization(data);
                if (data.twoparts) {
                    $('.LakePart').show();
                }
                else {
                    $('.LakePart').hide();
                }
            },
            error: function () {
            }
        });
    }

    function TableMineralization(data) {
        var tablebody1 = $('#tablebodyMineralization1'),
            tablebody2 = $('#tablebodyMineralization2');
        tablebody1.html('');
        if (data.mineralizationtable1 != null) {
            for (var i = 0; i < data.mineralizationtable1.length; i++) {
                var tr = $('<tr/>').appendTo(tablebody1);
                tr.append('<td>' + data.mineralizationtable1[i].year + '</td>');
                tr.append('<td>' + data.mineralizationtable1[i].mineralization + '</td>');
                tr.append('<td>' + data.mineralizationtable1[i].mineralizationType + '</td>');
            }
        }
        tablebody2.html('');
        if (data.mineralizationtable2 != null) {
            for (var i = 0; i < data.mineralizationtable2.length; i++) {
                var tr = $('<tr/>').appendTo(tablebody2);
                tr.append('<td>' + data.mineralizationtable2[i].year + '</td>');
                tr.append('<td>' + data.mineralizationtable2[i].mineralization + '</td>');
                tr.append('<td>' + data.mineralizationtable2[i].mineralizationType + '</td>');
            }
        }
        $('.GHI').hide();
    }

    var ChartMineralization1 = null,
        ChartMineralization2 = null;
    function ChartMineralization(data) {
        if (ChartMineralization1 != null) {
            ChartMineralization1.destroy();
        }
        var ctx1 = document.getElementById("chartMineralization1").getContext('2d');
        var labels1 = [],
            data1 = [];
        if (data.mineralizationtable1 != null) {
            for (var i = 0; i < data.mineralizationtable1.length; i++) {
                labels1.push(data.mineralizationtable1[i].year);
                data1.push(data.mineralizationtable1[i].mineralization);
            }
        }
        ChartMineralization1 = new Chart(ctx1, {
            type: 'line',
            data: {
                labels: labels1,
                datasets: [{
                    label: $('#Mineralization').val(),
                    data: data1,
                    backgroundColor: 'rgba(255,99,132,1)',
                    borderColor: 'rgba(255,99,132,1)',
                    borderWidth: 1,
                    fill: false
                }]
            },
            options: {
                title: {
                    display: true,
                    text: $('#Name').text() + ' (' + $('#LakeIdInfo').text() + '). ' + $('#Mineralization').val()
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: $('#Year').val()
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: $('#Value').val()
                        }
                    }]
                }
            }
        });
        if (ChartMineralization2 != null) {
            ChartMineralization2.destroy();
        }
        var ctx2 = document.getElementById("chartMineralization2").getContext('2d');
        var labels2 = [],
            data2 = [];
        if (data.mineralizationtable1 != null) {
            for (var i = 0; i < data.mineralizationtable2.length; i++) {
                labels2.push(data.mineralizationtable2[i].year);
                data2.push(data.mineralizationtable2[i].mineralization);
            }
        }
        ChartMineralization2 = new Chart(ctx2, {
            type: 'line',
            data: {
                labels: labels2,
                datasets: [{
                    label: $('#Mineralization').val(),
                    data: data2,
                    backgroundColor: 'rgba(255,99,132,1)',
                    borderColor: 'rgba(255,99,132,1)',
                    borderWidth: 1,
                    fill: false
                }]
            }
        });
    }

    function ShowTableMineralization1() {
        $('.GHI').hide();
        $('#tableMineralization1').show();
    }

    function ShowTableMineralization2() {
        $('.GHI').hide();
        $('#tableMineralization2').show();
    }

    function ShowChartMineralization1() {
        $('.GHI').hide();
        $('#chartMineralization1').show();
    }

    function ShowChartMineralization2() {
        $('.GHI').hide();
        $('#chartMineralization2').show();
    }
</script>
@* ChangeDataType, SlideYear, ChangeYear *@
<script>
    function SlideYear(year) {
        $('#year').html(year);
    };

    function ChangeDataType() {
        var year = $('#Year').val();
        if ($('#DataType').val() == "WaterLevels") {
            $.ajax({
                url: '@Url.Action("GetWaterLevelsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.WaterLevel').show();
        }
        else if ($('#DataType').val() == "SurfaceFlows") {
            $.ajax({
                url: '@Url.Action("GetSurfaceFlowsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.SurfaceFlow').show();
        }
        else if ($('#DataType').val() == "Precipitations") {
            $.ajax({
                url: '@Url.Action("GetPrecipitationsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.Precipitation').show();
        }
        else if ($('#DataType').val() == "UndergroundFlows") {
            $.ajax({
                url: '@Url.Action("GetUndergroundFlowsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.UndergroundFlow').show();
        }
        else if ($('#DataType').val() == "SurfaceOutflows") {
            $.ajax({
                url: '@Url.Action("GetSurfaceOutflowsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.SurfaceOutflow').show();
        }
        else if ($('#DataType').val() == "Evaporations") {
            $.ajax({
                url: '@Url.Action("GetEvaporationsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.Evaporation').show();
        }
        else if ($('#DataType').val() == "UndergroundOutflows") {
            $.ajax({
                url: '@Url.Action("GetUndergroundOutflowsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.UndergroundOutflow').show();
        }
        else if ($('#DataType').val() == "HydrochemistryMineralizations") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryMineralizationsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryMineralization').show();
        }
        else if ($('#DataType').val() == "HydrochemistryTotalHardnesss") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryTotalHardnesssStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryTotalHardness').show();
        }
        else if ($('#DataType').val() == "HydrochemistryDissOxygWaters") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryDissOxygWatersStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryDissOxygWater').show();
        }
        else if ($('#DataType').val() == "HydrochemistryPercentOxygWaters") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryPercentOxygWatersStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryPercentOxygWater').show();
        }
        else if ($('#DataType').val() == "HydrochemistrypHs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistrypHsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistrypH').show();
        }
        else if ($('#DataType').val() == "HydrochemistryOrganicSubstancess") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryOrganicSubstancessStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryOrganicSubstances').show();
        }
        else if ($('#DataType').val() == "HydrochemistryCas") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryCasStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryCa').show();
        }
        else if ($('#DataType').val() == "HydrochemistryMgs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryMgsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryMg').show();
        }
        else if ($('#DataType').val() == "HydrochemistryNaKs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryNaKsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryNaK').show();
        }
        else if ($('#DataType').val() == "HydrochemistryCls") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryClsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryCl').show();
        }
        else if ($('#DataType').val() == "HydrochemistryHCOs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryHCOsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryHCO').show();
        }
        else if ($('#DataType').val() == "HydrochemistrySOs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistrySOsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistrySO').show();
        }
        else if ($('#DataType').val() == "HydrochemistryNHs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryNHsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.WaterLevel').show();
        }
        else if ($('#DataType').val() == "HydrochemistryNO2s") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryNO2sStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryNO2').show();
        }
        else if ($('#DataType').val() == "HydrochemistryNO3s") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryNO3sStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryNO3').show();
        }
        else if ($('#DataType').val() == "HydrochemistryPPOs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryPPOsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryPPO').show();
        }
        else if ($('#DataType').val() == "HydrochemistryCus") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryCusStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryCu').show();
        }
        else if ($('#DataType').val() == "HydrochemistryZns") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryZnsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryZn').show();
        }
        else if ($('#DataType').val() == "HydrochemistryMns") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryMnsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryMn').show();
        }
        else if ($('#DataType').val() == "HydrochemistryPbs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryPbsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryPb').show();
        }
        else if ($('#DataType').val() == "HydrochemistryNis") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryNisStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryNi').show();
        }
        else if ($('#DataType').val() == "HydrochemistryCds") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryCdsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryCd').show();
        }
        else if ($('#DataType').val() == "HydrochemistryCos") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryCosStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryCo').show();
        }
        else if ($('#DataType').val() == "HydrochemistryCIWPs") {
            $.ajax({
                url: '@Url.Action("GetHydrochemistryCIWPsStyleLink", "Layers")',
                data: { Year: year, LayerId: @ViewBag.LakesLayer.Id },
                type: 'POST',
                success: function (data) {
                    var Source_New = new ol.source.TileWMS({
                        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/ELake/wms?' + data,
                        params: {
                            'LAYERS': 'ELake:@ViewBag.LakesLayer.GeoServerName',
                            'VERSION': '1.1.0',
                            'FORMAT': 'image/png',
                            'TILED': true
                        },
                        serverType: 'geoserver'
                    });
                    var l = map.getLayers().getArray()[1];
                    l.setSource(Source_New);
                },
                error: function () {
                }
            });
            $('.Legend').hide();
            $('.HydrochemistryCIWP').show();
        }
    };
</script>
@*Map onclick*@
<script>
    map.on('singleclick', function (evt) {
        Source_Lake.clear();
        var viewResolution = (map.getView().getResolution());
        var url = Source_Lakes.getGetFeatureInfoUrl(
            evt.coordinate, viewResolution, 'EPSG:3857',
            {
                'INFO_FORMAT': 'text/javascript'
                //'FEATURE_COUNT': '10000'
            });
        if (url) {
            var parser = new ol.format.GeoJSON();
            $.ajax({
                jsonp: false,
                jsonpCallback: 'getJson',
                type: 'GET',
                url: url + "&format_options=callback:getJson",
                async: false,
                dataType: 'jsonp',
                //jsonpCallback: 'parseResponse',
                error: function (xhr, status, error) {

                }
            }).then(function (response) {
                var result = parser.readFeatures(response);
                if (result.length > 0) {
                    SelectLakeZoom(result[0].get('id'), false);
                }
            })
        }
    })
</script>
@* SearchChange *@
<script>
    // select - выбранный на главной странице
    function SearchChange(select) {
        var Adm1KATOId = null,
            Adm2KATOId = null,
            VHB = null,
            VHU = null,
            System = null;
        if ($("input[name='filtertabs']:checked").val() == 'filterKATO') {
            Adm1KATOId = $('#adm1').val();
            Adm2KATOId = $('#adm2').val();
        }
        else if ($("input[name='filtertabs']:checked").val() == 'filterVHBVHU') {
            VHB = $('#svhb').val();
            VHU = $('#svhu').val();
        }
        else if ($("input[name='filtertabs']:checked").val() == 'filterSystem') {
            System = $('#ssystem').val();
        }
        $("#LakeId").LoadingOverlay("show");
        $.ajax({
            url: '@Url.Action("GetLakes")',
            data: {
                Search: $('#search').val(),
                Adm1KATOId: Adm1KATOId,
                Adm2KATOId: Adm2KATOId,
                VHB: VHB,
                VHU: VHU,
                LakeSystem: System
            },
            type: 'POST',
            success: function (data) {
                var $dropdown = $("#LakeId");
                $dropdown.find('option')
                    .remove();
                $.each(data.lakes, function () {
                    $dropdown.append($("<option />").val(this.lakeId).text(this.name));
                });
                if (select > 0) {
                    $("#LakeId").val(select);
                }
                $('#foundLakes').text($('#Found').val() + ': ' + data.lakes.length.toString());
                $("#LakeId").LoadingOverlay("hide");
            },
            error: function () {
                $("#LakeId").LoadingOverlay("hide");
            }
        });
    }

    function GetAdm1() {
        var $dropdown = $("#adm1");
        $dropdown.find('option')
            .remove();
        $.ajax({
            url: '@Url.Action("GetAdm1")',
            data: {
                Search: $('#search').val()
            },
            type: 'POST',
            success: function (data) {
                $dropdown.append($("<option />"));
                $.each(data.adm1, function () {
                    $dropdown.append($("<option />").val(this.id).text(this.name));
                });
            },
            error: function () {
            }
        });
    }

    function GetAdm2() {
        var $dropdown = $("#adm2");
        $dropdown.find('option')
            .remove();
        $.ajax({
            url: '@Url.Action("GetAdm2")',
            data: {
                Search: $('#search').val(),
                Adm1KATOId: $('#adm1').val()
            },
            type: 'POST',
            success: function (data) {
                $dropdown.append($("<option />"));
                $.each(data.adm2, function () {
                    $dropdown.append($("<option />").val(this.id).text(this.name));
                });
            },
            error: function () {
            }
        });
    }

    function GetVHB() {
        var $dropdown = $("#svhb");
        $dropdown.find('option')
            .remove();
        $.ajax({
            url: '@Url.Action("GetVHB")',
            data: {
                Search: $('#search').val()
            },
            type: 'POST',
            success: function (data) {
                $dropdown.append($("<option />"));
                $.each(data.vhb, function () {
                    $dropdown.append($("<option />").val(this).text(this));
                });
            },
            error: function () {
            }
        });
    }

    function GetVHU() {
        var $dropdown = $("#svhu");
        $dropdown.find('option')
            .remove();
        $.ajax({
            url: '@Url.Action("GetVHU")',
            data: {
                Search: $('#search').val(),
                VHB: $('#svhb').val()
            },
            type: 'POST',
            success: function (data) {
                
                $dropdown.append($("<option />"));
                $.each(data.vhu, function () {
                    $dropdown.append($("<option />").val(this).text(this));
                });
            },
            error: function () {
            }
        });
    }

    function GetSystem() {
        var $dropdown = $("#ssystem");
        $dropdown.find('option')
            .remove();
        $.ajax({
            url: '@Url.Action("GetSystem")',
            data: {
                Search: $('#search').val()
            },
            type: 'POST',
            success: function (data) {
                $dropdown.append($("<option />"));
                $.each(data.system, function () {
                    $dropdown.append($("<option />").val(this.lakeSystemId).text(this.name));
                });
            },
            error: function () {
            }
        });
    }

    function ResetSearch() {
        $('#search').val('');
        GetAdm1();
        GetAdm2();
        GetVHB();
        GetVHU();
        GetSystem();
        SearchChange(0);
    }
</script>
@* $(document).ready(function () {}) *@
<script>
    //function Test() {
    //    $("#LakeGroup").hide();
    //    alert(1);
    //}

    $(document).ready(function () {
        $("#LakeGroup").hide();
        ChangeDataType();
        $('#search').val($('#LakeName').val());
        if ($('#ViewBagLakeId').val() != '') {
            GetAdm1(); GetAdm2(); GetVHB(); GetVHU(); 
            SearchChange($('#ViewBagLakeId').val());
        }
        else {
            SearchChange(0);
        }
    });
</script>